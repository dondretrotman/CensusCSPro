{Application 'CENSUS2020VER2' logic file generated by CSPro}
{
Census Android CAPI application
Author: Dondré Trotman
Date: 2018/05/24
Version: 1.0

Description:
This application is meant to be installed on an Android device using the CSPRO app available on the Google Play Store.
It is based on the 2020 Barbados Population and Housing Census questionnaire which is still under development.
To run on desktop, it needs the following file extensions, all with the same name:
.ent, .net.apc, .ent.mgf, .ent.qsf, .fmf, .pff
To run on Android, it needs for following file extensions, all with the same name:
.pff, .pen. Copy the two files to the csentry folder on an android device that has CSPro installed  
Search for DEBUG: to find code with known bugs  
Search for TODO: to find more things to add  

Special instructions: 
Make sure that the order of the individual Listing and the population section are the same.

TODO:
Make sure that android experience is good
Add metadata. i.e. Enumerator ID, Supervisor ID and Interview status.
*Done - Ask about getting statistics about enumerator performance. ie how long do they take to answer each question, history of changes, etc.
ask about encrypting CSPro csdb files

TO BE RESEARCHED:
1. Find out lowest age that a person can be married (P9)

Refactoring progress - Complete, need to add question and help text
}

PROC GLOBAL
//--------------------------VARIABLE DECLARATION-------------------------------
numeric i, 				//throwaway variable for loops
		tempage, 		//for calculating age
		residents, 		//
		nonreshouse, 	//flag that is set for non-resident house
		diff,			//for calculating date differences
		censusdate,		//stores census date
		censusyear,
		censusmonth,
		censusday,
		numheads,		//number of heads of household
		numspouses,		//number of spouses
		vsindex,		//valueset index
		nextEntry;		//keeps track of cases
	
string 	checkboxcodes,	//for creating dynamic checkboxes
		checkboxalpha,	//checkbox alpha code
		censusmonthtext,
		caselabel,		//stores the label for the current case
		idno;			//stores id number when loading cases

//---------------------------ARRAY DECLARATION---------------------------------
array string  vsLabels(26);			//Defines dynamic valueset labels
array numeric vsNumCodes(26);		//defines dynamic numeric valueset codes
array string  vsAlphaCodes(26);		//defines dynamic string valueset codes
array numeric industryCodes(711);	//defines valueset for industry codes (There are 711 industry codes)
array string  industryLabels(711);	
array numeric occupationCodes(534);	//defines valueset for occupation codes (There are 534 occupations
array string  occupationLabels(534);

//--------------------------FUNCTION DECLARATION-------------------------------
//Checks that date is valid. Returns 1 if valid. Returns 0 if invalid
function checkDate(YEAR, MONTH, DAY)
	if not YEAR in 1900:censusyear,9999 then
		errmsg("Invalid Year. (=%d)",YEAR);
		checkDate = 0;
		exit;
	endif;
	
	if not MONTH in 1:12,99 then
		errmsg("Invalid Month. (=%d)",Month);
		checkDate = 0;
		exit;
	endif;
	
	//DEBUG: Does not detect Leap years for some reason. Should be fixed
	if MONTH in 9,4,6,11 then		//30 days have September, April, June and November
		if not DAY in 1:30,99 then
			errmsg("%s does not have %d days. Please confirm.",getlabel(DOB_MONTH_VS1,MONTH),DAY);
			checkDate = 0;
		endif;
	elseif MONTH in 1,3,5,7,8,10,12 then		//All the rest have 31
		if not DAY in 1:31,99 then
			errmsg("%s does not have %d days. Please confirm.",getlabel(DOB_MONTH_VS1,MONTH),DAY);
			checkDate = 0;
		endif;
	elseif MONTH = 2 and YEAR in 1900:censusyear then					//Except February alone
		if YEAR % 4 = 0 and YEAR <> 1900 then		
			if not DAY in 1:29,99 then		//Which has 29 days each leap year
				errmsg("%s does not have %d days. Please confirm.",getlabel(DOB_MONTH_VS1,MONTH),DAY);
				checkDate = 0;
			endif;	
		else
			if not DAY in 1:28,99 then		//And 28 on all other years
				errmsg("%s does not have %d days. Please confirm.",getlabel(DOB_MONTH_VS1,MONTH),DAY);
				checkDate = 0;
			endif;		
		endif;		//I had to change the rhyme a bit so that it would fit my code
	elseif YEAR = 9999 then		//cleanup for unknown year
		if MONTH = 2 then
			if not DAY in 1:29,99 then
				errmsg("%s does not have %d days. Please confirm.",getlabel(DOB_MONTH_VS1,MONTH),DAY);
				checkDate = 0;
			endif;
		endif;
	else
		checkDate = 1;
	endif;
end;

//re-initialises string array to "" in all items
function clearStringArray(array string x())
	do i = 1 while i <= 26
		x(i) = "";
	enddo;
end;

//re-initialises numeric array to 0 in all items
function clearNumArray(array numeric x())
	do i = 1 while i <= 26
		x(i) = 0;
	enddo;
end;

//Function creates a navigation button to move freely throughout the questionnaire as long as the data is valid
//we could add more buttons to navigate by person record or by section. Click nav button to choose a person then click for section
//and another button for the last place you left off
function nav();
	numeric section = accept("Go to section","ID","Individual Listing", "Housing","Emigration","Population");	//Main Navigation options
	if section = 1 then			//if ID
		move to IDS0_FORM advance;		//move to ID stuff
	elseif section = 2 then		//if Individual listing
		move to INDIVIDUAL_FORM advance	;
	elseif section = 3 then		//if Housing
		move to HOUSING_FORM advance;
	elseif section = 4 then		//if Emigration
		move to EMIGRATION_FORM advance;
	elseif section = 5 then		//if Population
		move to POPULATION_FORM advance;
	endif;
end;

//View enumerator manual as a pdf
//DEBUG: WILL NOT OPEN THE FILE!!!
function manual()
	if getos() = 20 then	//if android
		errmsg(maketext(pathname(csentry)+"../Resources/Enumerators_Manual_2010.pdf"));
		execsystem(maketext("view:"+pathname(csentry)+"Enumerators_Manual_2010.pdf"));
	elseif getos() = 10 then	//if windows
		errmsg(maketext("%s..\Resources\Enumerators_Manual_2010.pdf",pathname(application)));
		execsystem(maketext("%s..\Resources\Enumerators_Manual_2010.pdf",pathname(application)));
	endif;
end;

//Uses android's built-in GPS to get gps coordinates and sets the latitude and longitude fields
function getgps()
	gps(open);
	if gps(read,60,5,"Getting location, Please wait...") = 1 then	//read up to 60 seconds while trying fo 5m accuracy. if successful
		//execsystem(maketext("gps:%f,%f", gps(latitude),gps(longitude)));
		//errmsg("Latitude=%f, Longitude=%f, Accuracy=%f",gps(latitude), gps(longitude), gps(accuracy));
		if accept(maketext("Save this location? %f, %f",gps(latitude),gps(longitude)),"Yes","No") = 1 then	//if yes
			LATITUDE = gps(latitude);
			LONGITUDE = gps(longitude);
			getgps = 1;
		endif;
	else
		errmsg("gps location failed. Please try again");
		getgps = 0;
	endif;
	gps(close);
//need to add checks at the end of the questionnaire to make sure that gps info was taken
end;



PROC CENSUS2020_FF
preproc
	userbar(clear);
	userbar(add button, "Navigation",nav());	//adds a navigation button
	userbar(add button, "View Manual",manual());	//adds button to show enumerator manual
//	userbar(add button, "Get Location",getgps());	//adds button to get gps coordinates
	userbar(show);

PROC PART_A
onfocus
	//set census date
	censusdate = 20200501;
	censusyear = 2020;
	censusmonth = 05;
	censusmonthtext = "May";
	censusday = 01;
	
	//show names in label fields when first starting the questionnaire
	do i = 1 while i <= maxocc(POPULATION000) and FIRST_NAME(i) <> ""		//DEBUG: totocc and count all return 0 if executed before the roster that they are referring to. should be fixed
		setocclabel(POPULATION000(i), strip(FIRST_NAME(i)));
		setocclabel(POPULATION001(i), strip(FIRST_NAME(i)));	//DEBUG: each occurence label is the first one
	enddo;
	
	//Set operatorid
	setoperatorid(loadsetting("UNAME"));
	
	//Set number of persons
	if visualvalue(HNOPERSONS) = notappl then
		HNOPERSONS = 0;
	endif;
	
	//initialize valueset index
	vsindex = 1; //initialize valueset index to 1
	
	//set completion status
	if visualvalue(INTERVIEW_STATUS) = notappl then
		INTERVIEW_STATUS = 2;
	endif;
	
postproc
	//mandatory longitude and latitude capture
	if visualvalue(LATITUDE) in 0,notappl,default or visualvalue(LONGITUDE) in 0,notappl,default then
		getgps();
	endif;
	
	//if latitude or longitude are invalid, prompt to updatefield. If valid, ask if to leave coordinates or to update
	i=0;
	do until i in 1,2
		i = accept(maketext("Accept current location before proceeding to the next dwelling unit (%f,%f)?",LATITUDE,LONGITUDE),"Get current location again","Accept current location");
	enddo;
	if i = 1 then
		getgps();		//get location
	elseif i = 2 then
		//break;			//cancel the while loop
	endif;
	
//should run after household has been entered
	if visualvalue(END_TIME) = notappl then		//If no end time
		END_TIME = systime("HHMM");						//then update the end time
	endif;
	if visualvalue(END_DATE) = notappl then			//if no end date
		END_DATE = sysdate("YYYYMMDD");				//update end date
	endif;
	
	//Set completion status
	if visualvalue(INTERVIEW_STATUS) <> 1 then
		//
	endif;
	
	//load case from VR and write info to it. If no case found, make a new one
//	cases = countcases(VISITATION_RECORD_DICT where VI_PARISH=PARISH and VI_ED=ED and VI_BUILDING=BUILDING and VI_DWELLING_UNIT=DWELLING_UNIT and VI_HOUSEHOLD=HOUSEHOLD);
	
	idno = maketext("%V%V%V%V%V",PARISH,ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
	if loadcase(VISITATION_RECORD_DICT,idno) then
		if VI_STATUS = notappl then
			VI_STATUS = INTERVIEW_STATUS;
		endif;
		if VI_ENUMERATOR = notappl then
			VI_ENUMERATOR = INTERVIEWER_ID;
		endif;
		if VI_ADDRESS1 = "" then
			VI_ADDRESS1 = ADDRESS1;
		endif;
		if VI_ADDRESS2 = "" then
			VI_ADDRESS2 = ADDRESS2;
		endif;
		if VI_LAST_NAME = "" then
			VI_LAST_NAME = LAST_NAME(1);
		endif;
		if VI_FIRST_NAME = "" then
			VI_FIRST_NAME = FIRST_NAME(1);
		endif;
		if VI_TOTAL = notappl then
			VI_TOTAL = HNOPERSONS;
		endif;
		if VI_MALES = notappl then
			VI_MALES = count(SEX where SEX=1);
		endif;
		if VI_FEMALES = notappl then
			VI_FEMALES = count(SEX where SEX=2);
		endif;
		if VI_MALES_RESIDENT_ABROAD = notappl then
			VI_MALES_RESIDENT_ABROAD = count(SEX where SEX=1 and UR=3);
		endif;
		if VI_FEMALES_RESIDENT_ABROAD = notappl then
			VI_FEMALES_RESIDENT_ABROAD = count(SEX where SEX=2 and UR=3);
		endif;
		if VI_DATE_STARTED = notappl then
			VI_DATE_STARTED = START_DATE;
		endif;
		if VI_DATE_COMPLETED = notappl then
			VI_DATE_COMPLETED = END_DATE;
		endif;
		if VI_LATITUDE = notappl then
			VI_LATITUDE = LATITUDE;
		endif;
		if VI_LONGITUDE = notappl then
			VI_LONGITUDE = LONGITUDE;
		endif;
		if VI_COMMENTS = "" then
			VI_COMMENTS = COMMENTS;
		endif;
	else
		loadcase(VISITATION_RECORD_DICT);
		VI_PARISH = PARISH;
		VI_ED = ED;
		VI_BUILDING = BUILDING;
		VI_DWELLING_UNIT = DWELLING_UNIT;
		VI_HOUSEHOLD = HOUSEHOLD;
		VI_STATUS = INTERVIEW_STATUS;
		VI_ENUMERATOR = INTERVIEWER_ID;
		VI_ADDRESS1 = ADDRESS1;
		VI_ADDRESS2 = ADDRESS2;
		VI_LAST_NAME = LAST_NAME(1);
		VI_FIRST_NAME = FIRST_NAME(1);
		VI_TOTAL = count(SEX);
		VI_MALES = count(SEX where SEX=1);
		VI_FEMALES = count(SEX where SEX=2);
		VI_MALES_RESIDENT_ABROAD = count(SEX where SEX=1 and UR=3);
		VI_FEMALES_RESIDENT_ABROAD = count(SEX where SEX=2 and UR=3);
		VI_DATE_STARTED = START_DATE;
		VI_DATE_COMPLETED = END_DATE;
		VI_LATITUDE = LATITUDE;
		VI_LONGITUDE = LONGITUDE;
		VI_COMMENTS = COMMENTS;
	endif;
	setcaselabel(VISITATION_RECORD_DICT, maketext("%V-%V-%V-%V-%V:%V",VI_PARISH,VI_ED,VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD,strip(VI_LAST_NAME)));
	writecase(VISITATION_RECORD_DICT);
	
//-----------------------------------------------------------------
PROC PARISH
preproc
	// ALW - Uncommented the prefill
	if visualvalue(PARISH) = notappl then		//if Parish is blank
		PARISH = tonumber(sysparm("PARISH"));		//Go to the pff file and get the system parameter named Parish. Change it to number and assign to variable
		setproperty(PARISH,"PROTECTED","Yes");	//and set province to proctected
	endif;
	if visualvalue(ED) = notappl then	
		ED = tonumber(sysparm("ED"));
		setproperty(ED,"PROTECTED","Yes");	
	endif;
	if visualvalue(BUILDING) = notappl and tonumber(sysparm("BUILDING")) <> default then	
		BUILDING = tonumber(sysparm("BUILDING"));
		setproperty(BUILDING,"PROTECTED","Yes");	
	endif;
	if visualvalue(DWELLING_UNIT) = notappl and tonumber(sysparm("DWELLING_UNIT")) <> default then	
		DWELLING_UNIT = tonumber(sysparm("DWELLING_UNIT"));
		setproperty(DWELLING_UNIT,"PROTECTED","Yes");	
	endif;
	if visualvalue(HOUSEHOLD) = notappl and tonumber(sysparm("HOUSEHOLD")) <> default then	
		HOUSEHOLD = tonumber(sysparm("HOUSEHOLD"));
		setproperty(HOUSEHOLD,"PROTECTED","Yes");	
	endif;
	if visualvalue(INTERVIEWER_ID) = notappl then
		INTERVIEWER_ID = tonumber(sysparm("USERID"));
	endif;
	//DONE TODO: pull supervisor ID from allocations app. To be tested
	if visualvalue(SUPERVISOR_ID) = notappl then
		loadcase(USERS_DICT,INTERVIEWER_ID);
		SUPERVISOR_ID = UN_NLEVEL;
	endif;

//------------------------------------------------------------------------------
PROC ED
//validate ED with parish
	if $ in 1:181 and PARISH <> 1 or		//if ed is not in St. Michael
		$ in 182:295 and PARISH <> 2 or 	//or Christ Church
		$ in 296:335 and PARISH <> 3 or		//or St. George
		$ in 336:397 and PARISH <> 4 or 	//or St. Philip
		$ in 398:418 and PARISH <> 5 or 	//or St. John
		$ in 419:479 and PARISH <> 6 or 	//or St. James
		$ in 480:508 and PARISH <> 7 or 	//or St. Thomas
		$ in 509:521 and PARISH <> 8 or 	//or St. Joseph
		$ in 522:532 and PARISH <> 9 or 	//or St. Andrew
		$ in 533:559 and PARIsh <> 10 or 	//or St. Peter
		$ in 560:583 and PARISH <> 11 then	//or St. Lucy
		errmsg("Enumeration district (%d) does not match the Parish (%s)",$,getlabel(PARISH_VS1,PARISH))
			select("Correct Parish",PARISH,"Correct ED",$);
	endif;

//----------------------------------------------------------------------------------
PROC HOUSEHOLD
//Should auto increment based on previous household number in the same ED
onfocus
	if $ = notappl then		//if blank
		//search other cases for the highest household num
		//$ = prevhousehold + 1;
	endif;
	
//------------------------------------------------------------------
PROC H14A
preproc
	if visualvalue(START_TIME) = notappl then		//if starting the questionnaire
		START_TIME = systime("HHMM");		//set start time
	endif;
	if visualvalue(START_DATE) = notappl then
		START_DATE = sysdate("YYYYMMDD");
	endif;
	
onfocus
	if visualvalue(HNOPERSONS) > 0 then		//set to occupied if number of persons in the household is more than 0. This is used if changing from an unoccupied house to an occupied one
		$ = 1;
	endif;
	
postproc
	if $ = 2 then	//if unoccupied 
		caselabel = maketext("VACANT-%v-%v-%v-%v",ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
		setcaselabel(CENSUS2020_DICT,caselabel);
		//skip to HOUSING_FORM;
		if LAST_NAME(1) = "" and FIRST_NAME(1) = "" and visualvalue(SEX(1)) = notappl then		//check that items in the first individual are blank
			delete(POPULATION000(1));		//delete record if it exists
		endif;
		endgroup;	//don't enter any people
	endif;



//----------------------------------------------------------------------
PROC POPULATION000
//SEEK EXAMPLE
{postproc
	if seek(RTH = 1) = 0 then
		errmsg("No spouse in house");
	else
		errmsg("Spouse is person #%d",seek(RTH = 1));
	endif;
	
}
PROC IID
preproc
	$ = curocc();		//automatically enter the ID
	noinput;

postproc
	if curocc() = 1 then	//if at the first person
		RTH = 0;				//set to head of household
	endif;
	
//----------------------------------------------------------------------
PROC LAST_NAME
onfocus
	setproperty($,"CanEnterNotAppl","No");		//can't leave blank
postproc
	if length($) = 0 then		//if nothing entered
		errmsg("Name cannot be blank");
	endif;
	
//Set case labels in case listings to an easier to read format to include name of head
	if curocc() = 1 then
		caselabel = maketext("%V-%02d-%03d-%03d-%03d-%03d",strip(LAST_NAME),PARISH,ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
	setcaselabel(CENSUS2020_DICT,caselabel);
	endif;
PROC FIRST_NAME
onfocus
	setproperty($,"CanEnterNotAppl","No");		//can't leave blank
POSTPROC
	if length($) = 0 then		//if nothing entered
		errmsg("Name cannot be blank");
	endif;
	
	setocclabel(POPULATION000(CUROCC()), strip(FIRST_NAME));

//------------------------------------------------------------
PROC POP_DOB
Postproc
	if checkdate(DOB_YEAR,DOB_MONTH,DOB_DAY) = 0 then	//checkdate
		reenter;
	endif;
	
	if datediff(DOB,censusdate) < 0 then		//if DOB is before census date
		errmsg("This person is too young to be enumerated. Only collect information on persons born on or after %v %v, %v",censusday,censusmonthtext,censusyear);
		reenter;			//reenter DOB
	endif;

//-----------------------------------------------------------------------------------------
PROC AGE
preproc	
	if DOB_YEAR < 9999 and DOB_MONTH < 99 and DOB_DAY < 99 then
		tempage = datediff(DOB, 20200501, "y");	
		$ = tempage;	//calculate age
	endif;
	
postproc	
	if $ <> tempage then
		errmsg("age (%d) does not agree with DOB (%s), please verify",AGE,edit("9999/99/99",DOB))
		select("Correct the age", AGE, "Correct the Date of birth", POP_DOB);
	endif;


//----------------------------------------------------------------------
PROC RTH
preproc
	if curocc() = 1 and $ <> 0 then 	//if this is the first person and is not the head 		
	errmsg("Please verify that this person is the head of household, If this is not the head, then enter details for the head of household.")
			select("Yes, this is the head", continue, "No, is not the head", LAST_NAME);
		$ = 0;	//make first person the head of household
		noinput;
	endif;
	
postproc	
	if $ = 0 and curocc() <> 1 then		//if head and person is not on the first record
		errmsg("Only one head of household is allowed. Current head of household is %s %s",strip(FIRST_NAME),strip(LAST_NAME));
		reenter;
	endif;
	
	//check that theres is only one head of household
	numheads = count(RTH where RTH = 0);		//count the number of heads of household
	if numheads > 1 then
		i = seek(RTH = 0, @1);			//look for the other head
		errmsg("Too many heads of household.")
		select("Change previous head",RTH(i), "Change current head",$);
	endif;
	
	//check that theres only 1 spouse or less
	numspouses = count(RTH where RTH = 1);		//count the number of spouses
	if numspouses > 1 then
		i = seek(RTH = 1, @1);			//look for the other spouse
		errmsg("Too many spouses.")
		select("Change previous spouse",RTH(i), "Change current spouse",$);
	endif;
	
	//Set case labels in case listings to an easier to read format to include name of head
	if $ = 0 then
		caselabel = maketext("%s-%02d-%03d-%03d-%03d-%03d",strip(LAST_NAME),PARISH,ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
		setcaselabel(CENSUS2020_DICT,caselabel);
	endif;

//----------------------------------------------------------------------
PROC ADDPER
postproc
	if $ = 2 then
		//check that there's one head of household
		numheads = count(RTH where RTH = 0);
		if numheads < 1 then
			errmsg("There are no heads of household listed! Please make someone the head or add another person to the household as the head");
			reenter;
		endif;
		
		HNOPERSONS = count(SEX);
		endgroup;
	endif;

//----------------------------------------------------------------------
PROC HNOPERSONS
//check number of persons in individual listing
postproc
	if $ <> totocc(POPULATION000) then	//if the number of persons don't agree with the number of records
		if visualvalue(H14A) = 2 then	//and if unoccupied
			errmsg("Number of persons in household (%d) does not match number in individual listing (%d)",$,totocc(POPULATION000))
			select("Add more people",H14A,"Change number of persons",$);
		else	//if occupied
			errmsg("Number of persons in household (%d) does not match number in individual listing (%d)",$,totocc(POPULATION000))
			select("Add more people",ADDPER(totocc()),"Change number of persons",$);
		endif;
	endif;
	if $ > 0 and visualvalue(H14A) = 2 then		//if DU is unoccupied but has persons living there
		errmsg("Unit is unoccupied but has %v person",$)
		select("change occupancy",H14A,"Chang enumber of persons",$);
	endif;
	

//-------------------------------------------------------
PROC H8
//H8 – What type of dwelling unit is this?
postproc
	if $ = 2 then		//If rented room
		//skip to H16C;	//skip  to shared bathrooms
	endif;

//--------------------------------------------------
PROC H8_OTHER
preproc
	//only ask if other is selected
	ask if H8 = 9;

//-------------------------------------------------------------

PROC H9
//H9 – Of what materials are the outer walls made?
//BATCH: should checks on the consistency of Walls, roofs, floors and foundations be done afterward?
PROC H9_OTHER
preproc
	//only ask if other is selected
	ask if H9 = 10;

//-------------------------------------------------------------
PROC H10
//H10 – Of what material is the roof made?
PROC H10_OTHER
//H10 – Of what material is the roof made?
preproc
	//only ask if other is selected
	ask if H10 = 9;

//-------------------------------------------------------------
PROC H11_OTHER
//H11 – What is the main flooring material?
preproc
	//only ask if other is selected
	ask if H11 = 6;

//-------------------------------------------------------------
PROC H12
//H12 – How is the foundation of the house constructed?
postproc
	//if rented room, skip to H16C after observing walls, roof etc
	if H8 = 2 and $ <> 4 then
		skip to H16C;
	endif;
PROC H12_OTHER
//H12 – How is the foundation of the house constructed?
preproc
	//only ask if other is selected
	ask if H12 = 4;
	
	//if rented room, skip to H16C after observing walls, roof etc
	if H8 = 2 then
		skip to H16C;
	endif;

//-------------------------------------------------------------
PROC H13
//H13 – In what year was the dwelling built?
postproc
	if H14A = 1 then		//if occupied
		skip to H14C;	//goto state of construction H14C
	endif;
	
//-----------------------------------------------------------------------------
PROC H14B
//H14(b) – If unoccupied, is unit
preproc
	ask if H14A = 2;
	
//---------------------------------------------------
PROC H14C
//H14(c) – What is the state of construction?
postproc
	if H14A = 2 then	//if unoccupied
		caselabel = maketext("UNOCCUPIED-%02d-%03d-%03d-%03d-%03d",PARISH,ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
		setcaselabel(CENSUS2020_DICT,caselabel);
		endlevel;		//end interview
	endif;
	
	//if occupied by only non residents (USUAL_RESIDENCE = A)
	//go to questions H15, H16 & H20 - H22

	//count non residents
	if H14A = 1 then		//if occupied
		residents = 0;
		nonreshouse = 0;
		do varying i = 1 until i > totocc(POPULATION000)
			if UR(i) = 1 then		//if resident is found
				inc(residents);	//count residents
			endif;
		enddo;
		if residents = 0 then	//if all persons are not usually resident in this house
			nonreshouse = 1;	//set non-resident house flag
			skip to H15;		//skip to H15
		endif;
	endif;

//----------------------------------------------------------------------
PROC H16A
//H16(a) – How many bedrooms does this dwelling have?
postproc
	if nonreshouse = 1 then
		skip to H20;
	endif;
	
//----------------------------------------------------------
PROC H16C
//H16(c) – Do you share a bathroom with any other household?
postproc
	if nonreshouse = 1 then		//if non-resident household flag is set
		skip to H20;			//go to Main water supply
	endif;
	
//------------------------------------------------------------
PROC H17A
//H17(a) – Under what type of tenure is this dwelling occupied?
postproc
	if $ in 3:4 then
		skip to H17D;
	endif;
	
//---------------------------------------------
PROC H17A_OTHER
////H17(a) – Under what type of tenure is this dwelling occupied?
preproc
	ask if H17A = 7;
	

//--------------------------------------------------
PROC HOU_HJOINTOWN
//H17(b)ii – If jointly owned, by how many males?
//H17(b)ii – If jointly owned, by how manyfe males?
preproc
	ask if H17BI = 3;

//----------------------------------------------
PROC H17C
//H17(c) – If owned, was it acquired through
preproc
	ask if H17A in 1:2;
	
	
//----------------------------------------
PROC H17C_OTHER
////H17(c) – If owned, was it acquired through
preproc
	//only ask if other is selected
	ask if H17C = 5;

//-------------------------------------------------------------
PROC H17D
//H17(d) – What is the rental period for this dwelling?
onfocus
	if not H17A in 3:4 then	//if not rented/leased
		skip to H19A;		//Skip to land tenure
	endif;
	
//-------------------------------------------------------------------------
PROC H18
//H18 – Is this dwelling rented fully furnished, semi-furnished or unfurnished?
postproc
	skip to H20;	//goto main water supply

//----------------------------------------------------------------------
PROC H19A_OTHER
//H19(a) – Under what type of tenure is this land occupied?
preproc
	//only ask if other is selected
	ask if H19A = 7;

//-------------------------------------------------------------
PROC HOU_LJOINTOWN
//H19(b)ii – If jointly owned, by how many males?
//H19(b)ii – If jointly owned, by how many females?
preproc
	ask if H19B = 3;

//----------------------------------------------

PROC H19D
//H19(d) – If owned, how was the land acquired?
preproc
	ask if H19A in 1:2;		//ask if land is owned

//------------------------------------------------
PROC H19D_OTHER
//H19(d) – If owned, how was the land acquired?
preproc
	//only ask if other is selected
	ask if H19D = 5;

//-------------------------------------------------------------
PROC H19E
//H19(e) – What is the rental period for this land?
onfocus
	if not H19B in 3,4 then		//if not rented or leased
		skip to H20;			//skip to Water supply
	endif;

//----------------------------------------------------
PROC H20_OTHER
//H20 – How is your main water supply obtained?
preproc
	//only ask if other is selected
	ask if H20 = 6;

//-------------------------------------------------------------
PROC H21A
//H21(a) – What type of toilet facilities does this dwelling unit have?
//May have to check that person can only have Toilet link to sewer, well or private sewerage if their water supply (H20)is piped into dwelling or at least the yard
postproc
	if $ = 5 then		//if none
		skip to H22A;	//skip to sources of lighting
	endif;
	
//----------------------------------------------------------------------------
PROC H21A_OTHER
////H21(a) – What type of toilet facilities does this dwelling unit have?
preproc
	//only ask if other is selected
	ask if H21A = 6;

//-------------------------------------------------------------
PROC H22A_OTHER
//H22(a) – What source of lighting is mainly used by this household?
preproc
	ask if H22A = 6;
	
//------------------------------------------------------
PROC H22B_OTHER
//H22(b) – What source of energy is mainly used for cooking?
preproc
	//only ask if other is selected
	ask if H22B = 8;

//-------------------------------------------------------------
PROC H22C
//H22(c) – Does your household produce solar or any other renewable energy for your own use? (Score as many as applicable)
postproc
	if pos("D",$) > 0 and length(strip($)) > 1 then		//If none selected with another option
		errmsg("cannot be no and another option");
		reenter;
	endif;
	
	if nonreshouse = 1 then		//if non-resident household flag is set
		caselabel = maketext("%V(nonresident)-%02d-%03d-%03d-%03d-%03d",strip(LAST_NAME(1)),PARISH,ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
		setcaselabel(CENSUS2020_DICT,caselabel);
		endlevel;				//end this questionnaire
	endif;
	
//------------------------------------------------------------
PROC H23BI
//H23(a)i – Which of these appliances\household equipment does your household have?
postproc
	if length(strip($)) = 0 then	//if nothing was chosen
		skip to H24;				//skip the next question
	endif;

//------------------------------------------------------
PROC H23BII
//H23(b)ii – Which of these appliances\household equipment does your household share? (Score as many as are applicable)
preproc
	ask if H8 in 2;	//only ask if this is a rented room in a separate house\apartment
	
	//create dynamic checkboxes based on previous question
	vsindex = 1;
	checkboxcodes = "ABCDEFGHIJKLMNOPQRSTUVWXZ";
	clearStringArray(vsAlphaCodes);		//initialise array
	
	do i = 1 while i <= 25;		//loop through all checkboxes
		checkboxalpha = checkboxcodes[i:1];	//convert index to alpha code
		if pos(checkboxalpha,H23BI) > 0 then	//if the checkbox was marked in the previous question
			vsalphacodes(vsindex) = checkboxalpha;	//add it to the valueset
			vslabels(vsindex) = getlabel(H23BII_VS1, checkboxalpha);
			inc(vsindex);	//next valueset item
		endif;		
	enddo;
	
	vsalphacodes(vsindex) = "";	//end valueset
	setvalueset($,vsalphacodes,vslabels);	//create valueset based on the above

//----------------------------------------------------------------------------
PROC E8A
//E8(a) - Since the last census (2010), has anyone left this household to live overseas and continues to reside abroad?
//onfocus
//	if H14A = 2 then
//		$ = 2;
//		endgroup;
//	endif;
	
postproc
	if $ = 2 then		//if no emmigrants
		endgroup;		//end emmigration section
	endif;

//------------------------------------------------------------------
PROC EYEAR
//TODO: validate eyear against date of birth
//How do I find the right record in the individual listing?
{
	if $ < DOB_YEAR then	//if year emigrated is before person was born
		errmsg("Year emigrated (%d) is after year of birth(%s)",$,DOB_YEAR);
		reenter;
	endif;
}
//-----------------------------------------------------------------------
PROC EAGE
//TODO: validate eage against year of departure and age
//Same issue as before

//----------------------------------------------------------------
PROC ECOUNTRY
	
PROC POPULATION001
//show names in label fields when first starting the questionnaire

onfocus
	do i = 1 while i <= totocc(POPULATION001)
		setocclabel(POPULATION001(i), strip(FIRST_NAME(i)));
	enddo;

Postproc	//should run after the last person has been entered
	if visualvalue(END_TIME) <> notappl then		//If no end time
		END_TIME = systime("HHMM");						//then update the end time
	endif;

//-------------------------------------------------------------------------------------
PROC PID
preproc
	setocclabel(POPULATION001(curocc()), strip(FIRST_NAME));

	
onfocus
	$ = IID;
	noinput;


//-----------------------------------------------------------
PROC POP_GENERAL
//P8(a) – Is your mother living in this household?
onfocus
//create dynamic valueset to show only women in household
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	vslabels(vsindex) = "Not in household";		//create first valueset entry for not in household
	vsnumcodes(vsindex) = 99;
	inc(vsindex);		//next valueset item
	
	do i=1 while i <= totocc(POPULATION000)		//go through all persons
		if SEX(i) = 2 and AGE(i) >= 13 and curocc() <> i then	//if female and old enough to be a parent and not the same as the current person
			vslabels(vsindex) = maketext("%V: %v %v (%v)",IID(i),FIRST_NAME(i), LAST_NAME(i), RTH(i));	//include the person's name in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vsnumcodes(vsindex) = notappl;
	setvalueset(P8A, vsnumcodes, vslabels);
	
//P8(b) – Is your father living in this household?
//create dynamic valueset to show only men in household
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	vslabels(vsindex) = "Not in household";		//create first valueset entry for not in household
	vsnumcodes(vsindex) = 99;
	inc(vsindex);		//next valueset item
	
	do i=1 while i <= totocc(POPULATION000)		//go through all persons
		if SEX(i) = 1 and AGE(i) >= 13 and curocc() <> i then	//if male and old enough to be a parent and not the same as the current person
			vslabels(vsindex) = maketext("%V: %v %v (%v)",IID(i),FIRST_NAME(i), LAST_NAME(i), RTH(i));	//include the person's name in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vsnumcodes(vsindex) = notappl;
	setvalueset(P8b, vsnumcodes, vslabels);
			
postproc
//P9 – What is your present marital status?
	if AGE < 15 and P9 <> 3 then		//if not old enough to be married but married
		errmsg("%s is not old enough to be %V",strip(FIRST_NAME), getlabel(P9_VS1,P9))
			select("Change answer",P9,"Ignore and continue",continue);		//either change answer or ignore (useful for catching illegal child brides)
	endif;

//---------------------------------------------------------------------


PROC P8A
////P8(a) – Is your mother living in this household?
//Code moved to POP_GENERAL block
PROC P8B
//P8(b) – Is your father living in this household?
//Code moved to POP_GENERAL block
PROC P10_OTHER
//P10 – What is your Ethnic Origin?
preproc
	//only ask if other is selected
	ask if P10 = 7;

//-------------------------------------------------------------
PROC P11A
//P11(a) – Are you affiliated with any religious denomination?
postproc
	if $ = 2 then		//if no religion
		skip to POP_DISABILITY;
	endif;

//------------------------------------------------------------
PROC POP_DISABILITY
//P12(b)i - vi are labelled P12(a)i - vi in the printed questionnaire
postproc
	if P12BI in 1:2 and P12BII in 1:2 and P12BIII in 1:2 and P12BIV in 1:2 and P12BV in 1:2 and P12BVI in 1:2 then		//if no disabilities
		P12A = 2;
		skip to P14;	//skip to non communicable disease
	else
		P12A = 1;
	endif;
	
//---------------------------------------------------------
PROC P12C
//P12(c) (Labeled P12(b) in the printed questionnaire) – What type of aid are you required to use because of the disability? (Score as many as are applicable)
postproc
	if pos("I",$) > 0 and length(strip($)) > 1 then		//if none selected with another option
		errmsg("cannot be none and another option");
		reenter;
	endif;
	
	//BATCH: make these checks in batch edit
	//TODO: redo this using correct questions and variable types
	{if pos("E",$) > 0 and (pos("K",P12AII) = 0 or pos("L",P12AII) = 0 or pos("M",P12AII) = 0 or pos("N",P12AII) = 0 or pos("R",P12AII) = 0 or pos("S",P12AII) = 0 or pos("T",P12AII) = 0) then
		errmsg("you are using a prosthesis. Are you sure you don't have one of the following disabilities?\nAmputated Limbs\nLimb Deformities");
		//GO BACK TO P12AII OR DESELECT PROSTHESIS
	endif;
	
	if pos("G",$) > 0 and (pos("A",P12AII) = 0 or pos("B",P12AII) = 0) then	//if using Hearing aids but no deafness\significant hearing impairment
		errmsg("You use hearing aids. Are you sure that you are not deaf or have a significant hearing impairment?");	//make sure that person has deafness\significant hearing impairment
		//GO BACK TO P12AII OR DESELECT HEARING AIDS
	endif;}

//------------------------------------------------------------------------------------
PROC P12C_OTHER
////P12(c) (Labeled P12(b) in the printed questionnaire) – What type of aid are you required to use because of the disability? (Score as many as are applicable)
preproc
	//only ask if other is selected
	ask if pos("H",P12C) > 0;

//-------------------------------------------------------------
PROC P13B_OTHER
//P13(b) – What was the origin of your disability?
preproc
	//only ask if other is selected
	ask if P13B = 5;

//-------------------------------------------------------------
PROC P14
//P14 – Do you have any of the following illnesses? (Score as many as are applicable)
	if pos("K",$) > 0 and length(strip($)) > 1 then		//If none selected with another option
		errmsg("cannot be none and another option");
		reenter;
	endif;

//------------------------------------------------------------------------
PROC P14_OTHER
//P14 – Do you have any of the following illnesses? (Score as many as are applicable)
preproc
	//only ask if other is selected
	ask if pos("J",P14) > 0;

//-------------------------------------------------------------

PROC P15A
//P15(a) - Where you born in Barbados?
postproc
	if $ = 2 then
		skip to P16A;
	endif;
	
//----------------------------------------------
PROC P15B
//P15(b) – If Yes, in which parish (Where your mother was living at the time)
preproc
	ask if P15A = 1;	//only ask if born in barbados
	
//-----------------------------------------------
PROC P16A
//P16(a) – In which country were you born?
onfocus
//If Born after May 1, 2019 (If under 1 year old), Go to (final Question). Otherwise, go to question living one year ago (P18)
	if AGE < 1 then		//if less than a year old	//ADD CHECKS FOR DOB
		skip to POP_END;	//skip to last question
	else
		skip to P17;	//otherwise go to Living 1 year ago
	endif;

//-----------------------------------------------------------------
PROC P16B
//P16(b) - In which year did you first arrive in Barbados to live?
postproc
	diff = datediff(DOB_YEAR,$);
	if diff < 0 then	//if first arrived to live in barbados before birth year
		errmsg("Year first arrived(%d) is after birth year(%d)",$,DOB_YEAR);
		reenter;		//birth year is more likely to be correct at this point
	endif;

//-----------------------------------------------------------------------------
PROC P17
//P17 – Where were you living one (1) year ago?
postproc
	if AGE < 5 then		//if born after may 1, 2015 (Age 5 years)
		skip to POP_EDUCATION;	//Skip to Education (P20A)
	endif;

//----------------------------------------------------------------------
PROC P18A
//P18(a) – Where were you living on May 1, 2015?
postproc
	if $ <> 3 then		//if not in another parish
		skip to P19A	//skip to Ever left barbados for > 5 years (P19A)
	endif;
	
//--------------------------------------------------
PROC P18B
//P19(b) – If IN ANOTHER PARISH, which parish?
preproc
	ask if P18A = 3; 		//only ask if living in another parish on may 1, 2015
	
onfocus
	//create dynamic valueset exclude the current parish
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	do i=1 while i <= 11		//go through all parishes
		if $(i) <> PARISH then	//if it's not the same as current parish DEBUG: changed from if $(i) <> PARISH then
			vslabels(vsindex) = getlabel(P19B_VS1,i);	//include the parish in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vsnumcodes(vsindex) = notappl;
	setvalueset($, vsnumcodes, vslabels);

postproc
	if $ = PARISH then		//if current parish is the same as another parish
		errmsg("Another parish(%s) is the same as current parish(%s)",getlabel(P19B_VS1, P19B), getlabel(PARISH_VS1, PARISH))		//either change another parish or change P19A
			select("Change another parish",$,"Change address at 2015",P19A);
	endif;

//-----------------------------------------------------------------
PROC P19A
//P19(a) – Did you ever leave Barbados for a continuous period of 5 years or more to reside abroad?
postproc
	if $ <> 2 then		//if no
		skip to POP_EDUCATION;	//skip to P20A
	endif;

//-------------------------------------------------------------
PROC P19B
//P19(b) – If YES. In which country?
preproc
	ask if P19A = 1;		//only ask if left  barbados for > 5 years
	
//-------------------------------------------------
PROC P19C
//P19(c) – In what year did you return to Barbados to live?
//BATCH: check that person returned after person turned 5 years old
preproc
	ask if P19A = 1;		//only ask if left  barbados for > 5 years
	
//-------------------------------------------------
PROC POP_EDUCATION
onfocus
	if AGE(curocc()) < 3 then 
		skip to POP_TRAINING;
	endif;

//--------------------------------------------
PROC P20A
//P20(a) Are you currently attending school or any other educational institution?
postproc
	if $ = 2 then				//if NO
		if AGE < 3 then			//and less than 3 years old
			skip to POP_END;		//skip to final question
		elseif AGE in 3:16 then	//and between 3 - 16 years old
			skip to P21A;			//skip to unable to go to school (P21)
		elseif AGE > 16 then	//and older than 16 years
			skip to P22;			//skip to highest level of education (P22)
		endif;
	endif;

//-------------------------------------------------------------------
PROC P20B
//P20(b) – Please indicate whether full-time or part-time
PROC P20C
//P20(c) – What type of school or educational institution are you attending?
PROC P20C_OTHER
//P20(c) – What type of school or educational institution are you attending?
preproc
	ask if P20C = 6; 		//only ask if Type of current school is Other
	
//----------------------------------------------------
PROC P21A
//P21(a) – During the past three months, were you ever unable to go to school due to lack of resources? (Numbering is intentional)
postproc
	if P20A = 1 then		//if currently attending school
		skip to P22;		//skip to highest level of education
	endif;
	
//----------------------------------------------
PROC P21B
//P21B – What is the reason for not attending?
{
//TODO: check that listed ages are correct
//DEBUG: NOT working with age 16. Wil exclude it for now and defer to edit checks
{
Age range, shool level
3 - 5		Preprimary
4 - 11		Primary
11 - 16		Secondary
15 - 18		PostSecondary
16+			Tertiary
}
{	if (AGE in 3:5 and not $ in 1,6,9)			//if 3-5 years old and not in preprimary
		or (AGE in 4:12 and not $ in 2,6,9)		//or 4-11 years old and not in primary
		or (AGE in 11:18 and not $ in 3,4,6,9)	//or 11-16 years old and not in secondary or Post-secondary
		or (AGE > 16 and not $ in 5,6,9) then	//or under 16 years and past Tertiary
		errmsg("Age (%d) does not correspond with current school (%s)", AGE,getlabel(P21B_VS1,P21B));
		reenter;								//try again
	endif;
}
	if AGE < 15 then		//If under 15 years old
		skip to P44;		//skip to final question
	endif;
}	
//-----------------------------------------------------------------
PROC P21B_OTHER
//P21(b) – What is the reason for not attending?
preproc
	//only ask if other is selected
	ask if P21B = 6;

//-------------------------------------------------------------
PROC P22
//P22 - what is the highest level of educational institution ever attended by you?
//highest level institution should not be lower than P21B if still attending school
//DEBUG: Should display all schools if P21B was skipped. Should be fixed now

{onfocus
	if P21B <> notappl then
		//create dynamic valueset exclude schools above the current school
		vsindex = 1;		//initialise valueset index
		clearNumArray(vsNumCodes);	//reset the valueset array
		
		do i=1 while i <= 6		//go through all items
			if $(i) >= P21B then	//if it's not the same as current schoo
				vslabels(vsindex) = getlabel(P23_VS1,i);	//include the school in the valueset
				vsnumcodes(vsindex) = i;
				inc(vsindex);					//increment the valueset index
			endif;
		enddo;
		vslabels(vsindex) = "Other";
		vsnumcodes(vsindex) = 7;
		inc(vsindex);
		vslabels(vsindex) = "None";
		vsnumcodes(vsindex) = 8;
		inc(vsindex);
		vslabels(vsindex) = "Not Sated";
		vsnumcodes(vsindex) = 9;
		inc(vsindex);
		
		vsnumcodes(vsindex) = notappl;
		setvalueset($, vsnumcodes, vslabels);
	endif;
}
postproc
	if P20A = 1 and P20C < $ then	//if currently attending school and current school is lower than highest school attended
		errmsg("Highest school attended (%s) is lower than current school (%s)",getlabel(P22_VS1,P22),getlabel(P20C_VS1,P20C))
			select("Change current school",P20C,"Change highest school attended",$);
	endif;

//----------------------------------------------------------------------------------------
PROC P22_OTHER
//P22 - what is the highest level of educational institution ever attended by you?
preproc
	//only ask if other is selected
	ask if P22 = 6;

//-------------------------------------------------------------
PROC P23
//P23 – How many years of schooling have you completed?
//BATCH: make checks based on age and highest level of educational institution
PROC P24AI
//P24(a)i – What examinations have you passed (score as many as are applicable)
//TODO: create dynamic checkboxes based on P22

onfocus
	//match school levels to exams
	{
	Preprimary => b
	Primary => b
	secondary => c-g,l
	senior => c-k,l
	Post => c-l
	Tertiary => m-s
	}
postproc
	if pos("A",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be 'none' and another option");
		reenter;
	endif;
	
	if pos("B",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be 'not taken any exam' and another option");
		reenter;
	endif;
	
//--------------------------------------------------------------------
PROC P24AI_OTHER
//P24(a)i – What examinations have you passed (score as many as are applicable)
preproc
	//only ask if other is selected
	ask if pos("T",P24AI) > 0;

//-------------------------------------------------------------
PROC P25A
//P25(a) – Do you have access to the internet?
postproc
	if $ = 2 then 		//if no access to internet
		skip to POP_TRAINING;		//skip to training (P26AI)
	endif;
	
//--------------------------------------------------
PROC P25B_OTHER
//P25(b) – Where do you use the internet? (Score as many as applicable)
preproc
	//only ask if other is selected
	ask if pos("H",P25B) > 0;

//-------------------------------------------------------------
PROC POP_TRAINING
onfocus
	if AGE(curocc()) < 15 then		//if Age is less than 15
		skip to POP_FERTILITY;		//skip to next section
	endif;
	
//--------------------------------------------------------
PROC P26AI
//P26(a)i – Were you ever trained\are you being trained for any occupation or profession?
preproc
	if AGE < 15 then		//if under 15 years old
		skip to POP_END;		//skip to last question
	endif;
	
postproc
	if $ = 2 then			//if never trained
		if SEX = 2 then		//and female
			skip to POP_FERTILITY;				//skip to fertility
		elseif SEX = 1 then	//if male
			skip to POP_ECONOMICACTIVITY;				//skip to Economic activity
		endif;
	endif;
	
//---------------------------------------------------------------------
PROC POP_TRAININGOCC
onfocus
	nextEntry = 1;
	forcase OCCUPATION_CODES_DICT do
		occupationCodes(nextEntry) = tonumber(LU_BARSOC_CODE);
		occupationLabels(nextEntry) = LU_OCCUPATION;
		inc(nextEntry);
	endfor;
	
	occupationCodes(nextEntry) = notappl;
	setvalueset(P26AII, occupationCodes, occupationLabels);
	
postproc
	if length(strip(P26AII_TEXT)) = 0 and P26AII = notappl then
		errmsg("Please either select an occupation or enter an occupation");
		reenter;
	endif;
	
//-----------------------------------------------------------------------
PROC P26B
//P26(b) – Have you completed training or are you still being trained?
postproc
	if $ in 2,3 then		//if did not complete training or still being trained
		skip to P27;		//skip to where trained
	endif;
PROC P26C
//P26(c) - If completed training, in what year did you complete training
preproc
	ask if P26B = 1;		//only ask if completed training
	
//-----------------------------------------------------------
PROC P28
//P28 – How many years of training have you completed?
postproc
	if (SEX = 2 and AGE > 64) or SEX = 1 then	//If female over 64 years or male
		skip to POP_ECONOMICACTIVITY;							//skip to economic activity
	endif;
	
//----------------------------------------------------------------------------------
PROC POP_FERTILITY
onfocus
	if SEX(curocc()) = 1 or (SEX(curocc()) = 2 and not AGE(curocc()) in 15:64) then	//if male or old woman
		skip to POP_ECONOMICACTIVITY;		//skip to economic activity
	endif;
	
//----------------------------------------------------
PROC P29A
//P29(a) – Have you ever had any children?
postproc
	if $ = 2 then	//if never had children
		skip to P32A	//skip to Union status
	endif;
	
//-------------------------------------------------------------------------
PROC P29BIII
//P29(b)iii - How many female liveborn children did you have?
postproc
	if P29BI <> P29BII + P29BIII then
		errmsg("Number of Male children (%d) and number of Female children (%d) don't add up to Total children (%d)",P29BII,P29BIII,P29BI)
		select("Correct Male children",P29BII,"Correct Female children",P29BIII,"Correct Total children",P29BI);
	endif;

//----------------------------------------------------------------------------------------
PROC P29CIII
//P29(c)iii - How many female liveborn children are still alive?
postproc
	if P29CI <> P29CII + P29CIII then
		errmsg("Number of Male children (%d) and number of Female children (%d) don't add up to Total children (%d)",P29CII,P29CIII,P29CI)
			select("Correct Male children",P29CII,"Correct Female children",P29CIII,"Correct Total children",P29CI);
	elseif P29CI > P29BI then
		errmsg("Children still alive (%d) cannot be more than total children (%d)", P29CI,P29BI)
			select("Correct liveborn children",P29BI,"Correct children still alive",P29CI);
	endif;

//-----------------------------------------------------------------------------------------------------
PROC POP_FIRSTLIVEBORN
//P30(a) – What is the date of birth of your first liveborn child?
postproc
	if checkdate(P30A_YEAR,P30A_MONTH,P30A_DAY) = 0 then		//if date is not valid
		reenter;
	endif;
	
	//calculate age based on date of birth
	tempage = datediff(DOB,P30A,"y");
	if tempage > AGE then
		errmsg("Date of birth of first liveborn child (%v) is after date of birth (%v). Please enter a valid age",edit("9999/99/99",P30A),edit("9999/99/99",DOB));
		reenter;
	endif;
		
//------------------------------------------------------------------
PROC P30B
//P30(b) – How old were you at the birth of your first liveborn child?
onfocus
	$ = tempage;
	
postproc
	if $ > AGE then		//if older than current age
		errmsg("Age at first birth (%v) is older than current age (%v). Please enter a valid age",$,AGE);
		reenter;
	endif;

//----------------------------------------------------------
PROC POP_LASTLIVEBORN
//P30(c) – What is the date of birth of your last liveborn child?
onfocus
	if P29BI = 1 then		//if only one child
		P30C = P30A;			//entre the same info for last child
		P30D = P30B;
		if AGE > 49 then	//if over 49
			skip to P32A;	//skip to Union status
		else
			advance to P31;
		endif;
	endif;

postproc
	if checkdate(P30C_YEAR,P30C_MONTH,P30C_DAY) = 0 then	//if date is not valid
		reenter;
	endif;
		
	//calculate age based on date of birth
	tempage = datediff(DOB,P30C,"y");
	if tempage > AGE then
		errmsg("Date of birth of last liveborn child (%v) is after date of birth (%v). Please enter a valid age",edit("9999/99/99",P30C),edit("9999/99/99",DOB));
		reenter;
	endif;
	
//--------------------------------------------------------------------
PROC P30D
//P30(d) – How old were you at the birth of your last liveborn child?
onfocus
	$ = tempage;
	
postproc
	if $ > AGE then		//if older than current age
		errmsg("Age at last birth (%v) is older than current age (%v). Please enter a valid age",$,AGE);
		reenter;
	endif;
	
	if AGE > 49 then	//if age is over 49
		skip to P32A;	//skip to union status
	endif;
	
//---------------------------------------------------------------
PROC P31
//P31 – How many live births did you have during the 12 months ending 30th April 2020?
//done TODO:validate against P30Bi and P30CI
postproc
	if $ in 1:4 and P29BI = 0 then		//if had children in the last 12 months but had no children in total
		errmsg("Had %s liveborn children in the last twelve months but %d total live births",getlabel(P31_VS1,P31),P29BI)
		select("Change number of liveborn children",P29BI,"Change births in last 12 months",$);
	endif;
	if $ in 1:4 and datediff(P30C,censusdate,"m") > 12 then		//if last live birth was more than 12 months ago.
		errmsg("Last live birth was on %v. More than 12 months from the Census date",edit("9999/99/99",P30C))
		select("Change date of birth of last liveborn child",POP_LASTLIVEBORN,"Change births in last 12 months",$);
	endif;

//-----------------------------------------------------------------------
PROC P32A
//UNION STATUS P32(a) – Are you currently living with a partner?
postproc
	if $ = 2 then		//if not living with a partner
		skip to P32BII	//skip to Ever lived with a husband P32BII
	endif;
	
//-----------------------------------------------------------
PROC P32BI
//P32(b)i – If yes and MARRIED, Are you living with your husband?
preproc
	ask if P32A = 1 and P9 = 1;		//only ask if currently  living with a partner and married

//---------------------------------------------------------------------------------
PROC P32BII
//P32(b)ii – If NO, Have you ever lived with a husband\Common law partner?
preproc
	ask if P32A = 2;		//only ask if not currently living with a partner
	
//----------------------------------------------------------
PROC P32C
//P32(c) – If With husband or with common law partner, score his individual number.
onfocus
	if P32A = 2 then	//if not with husband or common law partner
		$ = 0;			//score as 0
		skip to POP_ECONOMICACTIVITY;	//and skip to economic activity
	endif;
	
	//create dynamic valueset to show only men in household
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	do i=1 while i <= totocc(POPULATION000)		//go through all persons
		if SEX(i) = 1 and AGE(i) >= 15 and curocc() <> i then	//if female and old enough to be a parent and not the same as the current person
			vslabels(vsindex) = maketext("%V: %v %v (%v)",IID(i),FIRST_NAME(i), LAST_NAME(i), RTH(i));	//include the person's name in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vslabels(vsindex) = "Not with husband/common law partner";		//create first valueset entry for not in household
	vsnumcodes(vsindex) = 0;
	inc(vsindex);
	
	vsnumcodes(vsindex) = notappl;
	setvalueset($, vsnumcodes, vslabels);
			
	
//----------------------------------------------------------------------
PROC P32D
//P32(d) – If with husband or Common law partner, how many years have you and your current partner been living together?
preproc
	ask if P32A = 1;		//only ask if with husband or common law partner
	
postproc
	//validate against age
	if $ > AGE then
		errmsg("Number of years are more than %V's age",strip(FIRST_NAME));
		reenter;
	endif;
	
//-----------------------------------------------------
PROC POP_ECONOMICACTIVITY
onfocus
	if AGE(curocc()) < 15 then		//if Age is less than 15
		skip to POP_END;		//skip to end
	endif;
	
//--------------------------------------------------------
PROC P33_OTHER
//P33 – What was your main activity during the 12 months ending 30th April 2020?
preproc
	//only ask if other is selected
	ask if P33 = 8;

//-------------------------------------------------------------
PROC P34
//P34 – During the 12 months ending 30th April 2020, did you work for an employer or for yourself?
postproc
	if $ = 9 then		//if did not work
		skip to P38;	//go to sources of livelihood other than employment
	endif;
	
//-------------------------------------------------------------
PROC P34_OTHER
//P34 – During the 12 months ending 30th April 2020, did you work for an employer or for yourself?
preproc
	//only ask if other is selected
	ask if P34 in 4,8;

//-------------------------------------------------------------
PROC POP_OCCINDUS
onfocus
	//create valueset for industry
	nextEntry = 1;
	forcase INDUSTRY_CODES_DICT do
		industryCodes(nextEntry) = tonumber(ISIC_V4_CODE);
		industryLabels(nextEntry) = INDUSTRY;
		inc(nextEntry);
	endfor;
	industryCodes(nextEntry) = notappl;
	setvalueset(P36, industryCodes, industryLabels);
	
	//create valueset for occupation
	nextEntry = 1;
	if occupationCodes(1) in 0,notappl then
		forcase OCCUPATION_CODES_DICT do
			occupationCodes(nextEntry) = tonumber(LU_BARSOC_CODE);
			occupationLabels(nextEntry) = LU_OCCUPATION;
			inc(nextEntry);
		endfor;
		occupationCodes(nextEntry) = notappl;
	endif;
	setvalueset(P37, occupationCodes, occupationLabels);

postproc
	if length(strip(P36_TEXT)) = 0 and P36 = notappl then
		errmsg("Please either select an occupation or enter an occupation");
		reenter;
	endif;
	if length(strip(P37_TEXT)) = 0 and P37 = notappl then
		errmsg("Please either select an industry or enter an industry");
		reenter;
	endif;
	
//----------------------------------------------------------------------------------
PROC P38
//P38 – What are your sources of livelihood other than from employment? (Score as many as applicable)
postproc
	if pos("K",$) > 0 and length(strip($)) > 1 then		//if None and other options selected
		errmsg("Cannot be none and have other selections");
		reenter;		//impute again
	endif;
	
	if P35 = 8 then		//If did not work
		skip to P39C;	//skip to monthly Income from sources other than employment
	endif;
	
//----------------------------------------------------------
PROC P38_OTHERASSISTANCE
//P38 – What are your sources of livelihood other than from employment? (Score as many as applicable)
preproc
	//only ask if other is selected
	ask if pos("I",P38) > 0;

//-------------------------------------------------------------
PROC P38_OTHER
//P38 – What are your sources of livelihood other than from employment? (Score as many as applicable)
preproc
	//only ask if other is selected
	ask if pos("J",P38) > 0;

//-------------------------------------------------------------
PROC P39A
//P39(a) – What is the normal pay period from your main occupation\job?
PROC P39A_OTHER
//P39(a) – What is the normal pay period from your main occupation\job?
preproc
	//only ask if other is selected
	ask if P39A = 4;

//-------------------------------------------------------------
PROC P39B
//P39(b) – What was your gross pay or income from your main occupation during the last pay period? (Before tax or deduction to the nearest $)
postproc
	if pos("K",P38) > 0 then	//if no sources of livelihood
		skip to POP_AGRICULTURE;	//skip to agriculture
	endif;
	
//------------------------------------------------------------
PROC P41A
//P41(a) – Are you involved in any agricultural activity?
PROC P41B
//P41(b) – Do you own any agricultural land?
postproc
	//Skip this and other agriculture questions if the last two questions are no
	If P41A = 2 and $ = 2 then		//if the last two questions are "no"
		skip to POP_CRIME;		//skip agriculture
	endif;
	
//-----------------------------------------------------------------------------
PROC P43
///P43 – In what type of agricultural activity are you involved? 
PROC P43_OTHER
//P43 – In what type of agricultural activity are you involved? 
preproc
	//only ask if other is selected
	ask if pos("K",P43) > 0;

//-------------------------------------------------------------
PROC P47A
//P47(a) – Have you ever been a victim of crime during the past 12 months ending April 30, 2020?
postproc
	if $ in 2,3 then		//if no crime victims
		skip to POP_END;		//skip to end
	endif;
	
//-------------------------------------------------------------------
PROC P47B
//P47(b) – If Yes, Please specify the type of crime 
PROC P47B_OTHER
//P47(b) – If Yes, Please specify the type of crime 
preproc
	//only ask if other is selected
	ask if pos("H",P47B) > 0;

//-------------------------------------------------------------
PROC P47C
//P47(c) – Out of the crimes indicated, which crimes were reported? 
onfocus
	//DEBUG: Dynamic valueset not showing up
	//create dynamic checkboxes based on previous question
	vsindex = 1;
	checkboxcodes = "ABCDEFGHI";
	clearStringArray(vsAlphaCodes);		//initialise array
	
	do i = 1 while i <= 9;		//loop through all checkboxes
		checkboxalpha = checkboxcodes[i:1];	//convert index to alpha code
		if pos(checkboxalpha,P47B) > 0 then	//if the checkbox was marked in the previous question
			vsalphacodes(vsindex) = checkboxalpha;	//add it to the valueset
			vslabels(vsindex) = getlabel(P47C_VS1, checkboxalpha);
			inc(vsindex);	//next valueset item
		endif;		
	enddo;
	
	vsalphacodes(vsindex) = "";	//end valueset
	setvalueset($,vsalphacodes,vslabels);	//create valueset based on the above

postproc
	if pos("J",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;
	
	if length(strip($)) = 0 then
		errmsg("There are victims of crime in this household but no crimes are selected")
			select("Change crime status",P47A,"Select a crime",$);
	endif;

//-------------------------------------------------------------------------
PROC P47C_OTHER
//P47(c) – Out of the crimes indicated, which crimes were reported? 
preproc
	//only ask if other is selected
	ask if pos("H",P47C) > 0;

//-------------------------------------------------------------
