{Application 'MENU' logic file generated by CSPro}
{
Notes:
 - IDs are 3 digits
 - Supervisor IDs must be 4 digits starting with 1 and foll0wed by three digits
 - Enumerator IDs must be 4 digits starting with 0 and followed by three digits
 - this is to avoid possible clashes since each ID must be unique in order for the login to work. A different solution can be found if needed but for now this works based on the information that I have.
TODO:
 - Need to be able to specify ED for Visitation Record and Household Questionnaires
 - Need to pass certain variables to the visitation record and questionnaire. i.e. interview status, Enumerator ID, Supervisor ID
}
PROC GLOBAL
//-----------------Variable Declaration-------------------
file	pffFile,		//creates .pff file
		loginfile,		//saves login status in a file
		;
		
numeric par,		//temp Parish variable
		usertype,		//sets user type
		errflag,		//sets error flag
		version,		//version number
		lastupdate,		//last update version day
		updated,		//Last time the app was updated
		a,i,j,k,l,		//general counters and temp variables
		;

string	cases,			//case id
		status,			//holds current login status
		username,		//stores user name
		ftpip1,			//Stores ftp address
		ftpip2,			//stores ftp secondary address
		ftpun, 			//stores ftp username
		ftppw,			//stores ftp password
		;

//-------------------Array Declaration--------------------
array string vsCode(99);
array string vsLabel(99);
array string 	address(99,3);	//stores addresses
array string	REPORTARRAY(50,10);	//stores enumerator report data (50 = number of records, 10 = number of fields (ERFEILD_OFFICER, ERSERIAL_NO,ERUNIT_NO,WEEK_ENDING,ERLAST-NAME, ERFIRST_NAME, ERADDRESS, ERSTART, EREND,ERREMARKS))

//------------------Function Declaration------------------
//Launches the visitation record
function launchVR()
	// ALW - Added stop
	//execpff("..\Visitation record\Visitation record.pff", stop);
	string pffFilename = Pathname(application) + "../Visitation Record/Visitation Record.pff";
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 7.1");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=Census VR");

	filewrite(pffFile,"[DataEntryInit]");
	filewrite(pffFile,"OperatorID=%s",UNAME);
	filewrite(pffFile,"StartMode=Add");
	filewrite(pffFile,"ShowInApplicationListing=Hidden");
	if getos() = 20 then				//only include the following line if on an android tablet
		filewrite(pffFile,"Lock=CaseListing");
	endif;
	filewrite(pffFile,"AutoAdd=Yes");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","./Visitation Record.ent");
	filewrite(pffFile,"InputData=%s","../Data/Visitation Record.csdb|CSPRODB");
	filewrite(pffFile,"Paradata=%s","../Data/Visitation Record.cslog");
	
	filewrite(pffFile,"[UserFiles]");
	filewrite(pffFile,"PFFFILE=%s","");

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"OnExit=../Menu/Menu.pff");
	filewrite(pffFile,"MODE=DEFAULT");
	filewrite(pffFile,"LSTENUMCODE=%s",maketext("%v",visualvalue(USERID)));
	filewrite(pffFile,"LSTED=%s",maketext("%v",ME_ED));
		
	close(pffFile);
	
	execpff(filename(pffFile), stop);
end;

//Launches the Visitation Record for Supervisors
function launchSupervisorVR()

	string pffFilename = pathname(application) + "..\Visitation Record\Visitation Record.pff";
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 7.1");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=CLFSS Control Sheet");

	filewrite(pffFile,"[DataEntryInit]");
	filewrite(pffFile,"OperatorID=%s",UNAME);
	filewrite(pffFile,"StartMode=Add;%s",CHOOSE_VR);
	filewrite(pffFile,"ShowInApplicationListing=Hidden");
	filewrite(pffFile,"Lock=CaseListing");
	filewrite(pffFile,"AutoAdd=No");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","./Visitation Record.ent");
	filewrite(pffFile,"InputData=%s","../Data/Visitation Record.csdb|CSPRODB");
	filewrite(pffFile,"Paradata=%s","../Data/Visitation Record.cslog");
	
	filewrite(pffFile,"[UserFiles]");
	filewrite(pffFile,"PFFFILE=%s","");

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"OnExit=../Menu/Menu.pff");
	
	filewrite(pffFile,"MODE=EDIT");
	filewrite(pffFile,"VI_PARISH=%s",CHOOSE_VR[1:2]);	//TODO: DONE The following has to be edited to capture the correct variables
	filewrite(pffFile,"VI_ED=%s",CHOOSE_VR[3:3]);
	filewrite(pffFile,"VI_BUILDING=%s",CHOOSE_VR[6:3]);
	filewrite(pffFile,"VI_DWELLING_UNIT=%s",CHOOSE_VR[9:3]);
	filewrite(pffFile,"VI_HOUSEHOLD=%s",CHOOSE_VR[12:3]);
	
	close(pffFile);

	execpff(filename(pffFile), stop);
end;

//searches an array and returns the position (Originally written by Gregory Martin)
function searchArray(array string arrayName(,),string findValue) 

    numeric foundPos,itr;
    
    do itr = 1 while itr <= tblrow(arrayName) and not foundPos
        
        if arrayName(itr,1) = findValue then
            foundPos = itr;
        endif;
    
    enddo;
    
    searchArray = foundPos;

end;

//Launches the Questionnaire and lets you choose a household
function launchQuestionnaire()

	string pffFilename = pathname(application) + "..\Questionnaire\Census2020Ver2.pff";
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 7.1");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=Barbados 2020 Census Questionnaire");

	filewrite(pffFile,"[DataEntryInit]");
	filewrite(pffFile,"OperatorID=%s",UNAME);
	// ALW - The below line will add the case if it does not exist
	// or enter the case in modify mode if it does
	filewrite(pffFile,"StartMode=Add;%s",CHOOSE_HOUSEHOLD);
	filewrite(pffFile,"ShowInApplicationListing=Hidden");
	filewrite(pffFile,"AutoAdd=No");
	filewrite(pffFile,"Lock=CaseListing");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","./Census2020Ver2.ent");
	filewrite(pffFile,"InputData=%s","../Data/CensusData.csdb|CSPRODB");
	filewrite(pffFile,"Paradata=%s","../Data/Census.cslog");

	filewrite(pffFile,"[ExternalFiles]");
	filewrite(pffFile,"VISITATION_RECORD_DICT=%s","../Data/VisitationRecord.csdb|CSPRODB");
	//filewrite(pffFile,"ENUMERATIONREPORT_DICT=%s","../Data/enumrpt.csdb|CSPRODB");		//TODO: to be added

	filewrite(pffFile,"[UserFiles]");
	filewrite(pffFile,"PFFFILE=%s","");

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"OnExit = ../Menu/Menu.pff");
	
	filewrite(pffFile,"PARISH=%S",CHOOSE_HOUSEHOLD[1:2]);		//CHOOSE_HOUSEHOLD[X:Y] where x = starting position, y = length
	filewrite(pffFile,"ED=%S",CHOOSE_HOUSEHOLD[3:3]);
	filewrite(pffFile,"BUILDING=%S",CHOOSE_HOUSEHOLD[6:3]);
	filewrite(pffFile,"DWELLING_UNIT=%S",CHOOSE_HOUSEHOLD[9:3]);
	filewrite(pffFile,"HOUSEHOLD=%S",CHOOSE_HOUSEHOLD[12:3]);

	close(pffFile);

	// ALW - Added stop
	execpff(filename(pffFile), stop);
end;

//Function to upload all Census and VR data
function uploadData()
	errflag = 0;		//clears  flag
	if syncconnect(FTP,ftpip1,ftpun,ftppw) then		//connect to FTP when outside of the Government WAN
		if not syncdata(PUT,CENSUS2020_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then		//Upload Labourforce data
			inc(errflag);
		endif;
		if not syncdata(PUT,VISITATION_RECORD_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then		//Upload Control Sheet
			inc(errflag);
		endif;
{		if not syncdata(PUT,ENUMERATIONREPORT_DICT,maketext("%3d",ME_ED)) then	//upload enumeration report			//TODO: Add enumeration report
			inc(errflag);
		endif;
}		if not syncfile(PUT,"../Data/Census2020Ver2.cslog",maketext("CensusLogs/Census%s.cslog",getdeviceid())) then		//Upload paradata logs
			inc(errflag);
		endif;
		//syncfile(PUT,"../Photos/*.jpg", "/CSPro/Photos/");
		if not syncfile(GET,"/CSPro/Update/Questionnaire/Census2020Ver2.pen","../Questionnaire/Census2020Ver2.pen") then		//update questionnaire
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Visitation Record/Visitation Record.pen","../Visitation Record/Visitation Record.pen") then		//update control sheet
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen") then		//update Menu
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/EnumerationReport.pen","../Reports/EnumerationReport.pen") then		//update Enumeration Report
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/enumeratorrpt.html","../Reports/enumeratorrpt.html") then		//report template
			inc(errflag);
		endif;
		syncdisconnect();		//disconnect

	elseif syncconnect(FTP,ftpip2,ftpun,ftppw) then		//connect to FTP when within the Government WAN
		if not syncdata(PUT,CENSUS2020_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then		//Upload Lacourforce data
			inc(errflag);
		endif;
		if not syncdata(PUT,VISITATION_RECORD_DICT,maketext("%3d",ME_ED)) then		//Upload Control Sheet
			inc(errflag);
		endif;
{		if not syncdata(PUT,ENUMERATIONREPORT_DICT,maketext("%2d%3d",rnd,ME_ED)) then	//upload enumeration report
			inc(errflag);
		endif;
}		if not syncfile(PUT,"../Data/Labourforce.cslog",maketext("LabourforceLogs/Labourforce%s.cslog",getdeviceid())) then		//Upload paradata logs
			inc(errflag);
		endif;
		//syncfile(PUT,"../Photos/*.jpg", "/CSPro/Photos/");
		if not syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen") then		//update questionnaire
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Visitation Record/Visitation Record.pen","../Visitation Record/Visitation Record.pen") then		//update control sheet
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen") then		//update Menu
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/EnumerationReport.pen","../Reports/EnumerationReport.pen") then		//update Enumeration Report
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/enumeratorrpt.html","../Reports/enumeratorrpt.html") then		//report template
			inc(errflag);
		endif;
		syncdisconnect();		//disconnect
	else
		inc(errflag,2);
	endif;
	if errflag > 1 then
		errmsg("Data upload failed, please try again. %d errors were found",errflag);
	elseif errflag = 0 then
		errmsg("Data upload was successful");
		savesetting("Updated",maketext("%d",sysdate("YYYYMMDD")));
	elseif errflag = 1 then
		errmsg("Data upload was probably successful but there was an error, please restart the app and try again to make sure. If you keep getting this error please contact the IT dept"); 
	endif;
end;

//update app only
function updateApp()
	errflag = 0;
	if syncconnect(FTP,ftpip1,ftpun,ftppw) then		//connect to FTP when outside of the Government WAN
		if not syncfile(GET,"/CSPro/Update/Questionnaire/Census2020Ver2.pen","../Questionnaire/Census2020Ver2.pen") then		//update questionnaire
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Visitation Record/Visitation Record.pen","../Visitation Record/Visitation Record.pen") then		//update Control Sheets
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen") then		//update Menu
			inc(errflag);
		endif;
{		if not syncfile(GET,"/CSPro/Update/Reports/EnumerationReport.pen","../Reports/EnumerationReport.pen") then		//update Enumeration Report
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/enumeratorrpt.html","../Reports/enumeratorrpt.html") then		//report template
			inc(errflag);
		endif;
}		syncdisconnect();		//disconnect
	elseif syncconnect(FTP,ftpip2,ftpun,ftppw) then		//connect to FTP when within the Government WAN
		if not syncfile(GET,"/CSPro/Update/Questionnaire/Census2020Ver2.pen","../Questionnaire/Census2020Ver2.pen") then		//update questionnaire
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Visitation Record/Visitation Record.pen","../Visitation Record/Visitation Record.pen") then		//update Control Sheet
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen") then		//update Menu
			inc(errflag);
		endif;
{		if not syncfile(GET,"/CSPro/Update/Reports/EnumerationReport.pen","../Reports/EnumerationReport.pen") then		//update Enumeration Report
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/enumeratorrpt.html","../Reports/enumeratorrpt.html") then		//report template
			inc(errflag);
		endif;
}		syncdisconnect();		//disconnect
	else
		inc(errflag,2);
	endif;
	if errflag > 1 then
		errmsg("App update failed, please try again. %d errors were found",errflag);
	elseif errflag = 0 then
		errmsg("App update was successful. Please restart the app to see any changes");
		savesetting("Updated",maketext("%d",sysdate("YYYYMMDD")));
		stop(0);
	elseif errflag = 1 then
		errmsg("App update was probably successful but there was an error, please restart the app and try again to make sure. If you keep getting this error please contact the IT dept"); 
	endif;
end;

//Function to download Census and VR data for an ED
function downloadData()
	errflag = 0;
	errmsg("Attempting to download all data from ED :%d",ME_ED);
	//errmsg("Data dictionary value Round :%V, ED :%V", RNDNO,EDNO);
	if syncconnect(FTP,ftpip1,ftpun,ftppw) then		//connect to FTP when outside of the government WAN
		if not syncdata(GET,CENSUS2020_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then		//get labourforce data for round and ED
			inc(errflag);
		endif;
		if not syncdata(GET,VISITATION_RECORD_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then			//get control sheet data for round and ED
			inc(errflag);
		endif;
{		if not syncdata(get,ENUMERATIONREPORT_DICT,maketext("%v",ME_ED)) then	//get enumeration report for ED
			inc(errflag);
		endif;
}		//syncfile(GET,"CSPro/Photos/*.jpg","../Photos/");
		if not syncfile(GET,"/CSPro/Update/Questionnaire/Census2020Ver2.pen","../Questionnaire/Census2020Ver2.pen") then		//update questionnaire
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Visitation Record/Visitation Record.pen","../Visitation Record/Visitation Record.pen") then		//update control sheet
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen") then		//update Menu
			inc(errflag);
		endif;
{		if not syncfile(GET,"/CSPro/Update/Reports/EnumerationReport.pen","../Reports/EnumerationReport.pen") then		//update Enumeration Report
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/enumeratorrpt.html","../Reports/enumeratorrpt.html") then		//report template
			inc(errflag);
		endif;
}		syncdisconnect();		//disconnect
	elseif syncconnect(FTP,ftpip2,ftpun,ftppw) then		//connect to FTP when outside of the government WAN
		if not syncdata(GET,CENSUS2020_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then		//get labourforce data for round and ED
			inc(errflag);
		endif;
		if not syncdata(GET,VISITATION_RECORD_DICT,maketext("%2d%3d",ME_PARISH,ME_ED)) then			//get control sheet data for round and ED
			inc(errflag);
		endif;
{		if not syncdata(get,ENUMERATIONREPORT_DICT,maketext("%v",ME_ED)) then	//get enumeration report for ED
			inc(errflag);
		endif;
}		//syncfile(GET,"CSPro/Photos/*.jpg","../Photos/");
		if not syncfile(GET,"/CSPro/Update/Questionnaire/Census2020Ver2.pen","../Questionnaire/Census2020Ver2.pen") then		//update questionnaire
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Visitation Record/Visitation Record.pen","../Visitation Record/Visitation Record.pen") then		//update control sheet
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen") then		//update Menu
			inc(errflag);
		endif;
{		if not syncfile(GET,"/CSPro/Update/Reports/EnumerationReport.pen","../Reports/EnumerationReport.pen") then		//update Enumeration Report
			inc(errflag);
		endif;
		if not syncfile(GET,"/CSPro/Update/Reports/enumeratorrpt.html","../Reports/enumeratorrpt.html") then		//report template
			inc(errflag);
		endif;
}		syncdisconnect();		//disconnect
	else
		inc(errflag,2);
	endif;
	if errflag > 1 then
		errmsg("Download of ED %d failed, Please try again. %d errors were found",ME_ED,errflag);
	elseif errflag = 0 then
		errmsg("Download of ED %d was successful",ME_ED);
		savesetting("Updated",maketext("%d",sysdate("YYYYMMDD")));
	elseif errflag = 1 then
		errmsg("Download of ED %d failed, Please try again",ME_ED);
	endif;
end;

//Function that writes login status to a file
function writeloginStatus(x);
	string loginFilename = pathname(application)+"loginflag.dat";
	setfile(loginfile,loginFilename,create);

	filewrite(loginfile,"%d%03d%04d%s",x,visualvalue(ME_ED),USERID,strip(UNAME));	//write value of "x" to file. 1=logged in, 0=logged out
	setoperatorid(strip(UNAME));
	savesetting("UNAME",strip(UNAME));
	
	close(loginfile);
end;

//Function that reads login status and returns 1 (logged in) or 0 (not logged in)
function readloginstatus();
	string loginfilename = pathname(application)+"loginflag.dat";	//set file path
	setfile(loginfile, loginfilename);		//set file handle
	fileread(loginfile, status);			//read file
	close(loginfile);						//close file
	
	readloginstatus = tonumber(status[1:1]);		//set function to file contents
	ME_ED = tonumber(status[2:3]);
	if tonumber(status[1:1]) = 1 then		//if logged in set login details
		USERID = tonumber(status[5:4]);
		UNAME = status[9];
		setoperatorid(status[9]);		//sets operator ID to username
		savesetting("UNAME",strip(UNAME));		//saves username as a setting so that other apps can access
	elseif tonumber(status[1:1]) = 0 then		//if logged out clear login details from form
		USERID = notappl;
		UNAME = "";
	endif;
end;

PROC MENU_FF

PROC MENU_QUEST
preproc

	//Initialize ftp variables
	ftpip1 = "64.119.198.70";
	ftpip2 = "10.129.20.110";
	ftpun = "Census2020";
	ftppw = "Census2020ADM!NP@ssW)rd";
	
	//recode ed to parish
	recode ME_ED => ME_PARISH;
		1-181	=>	1;
		182-295	=>	2;
		296-335	=>	3;
		336-397	=>	4;
		398-418	=>	5;
		419-479	=>	6;
		480-508	=>	7;
		509-521	=>	8;
		522-532	=>	9;
		533-559	=>	10;
		560-583	=>	11;
	endrecode;
	
//-------------------------------------------------------------
PROC UNAME
preproc
	if readloginstatus() = 1 then		//if already logged in
		advance to ME_ED;					//just login
	elseif readloginstatus() = 0 then	//if not, continue logging in
		
	endif;

//------------------------------------------------------------
PROC USERID
//code to make sure that the valueset label matches Username
postproc
	if getlabel(USERID_VS1,$) = strip(UNAME) then
		writeLoginStatus(1);//success
	else
		errmsg("Username and ID don't match! Please try again");
		move to UNAME;
	endif;


//---------------------------------------------------------------
PROC ME_ED
onfocus
	//displays saved ED  number

	$ = tonumber(loadsetting("ED")); 
	
postproc
	//saves the ED number as a setting
	savesetting("ED",maketext("%d",$));
	setoperatorid(UNAME);
	
	
//--------------------------------------------------------------------
PROC LOGIN
onfocus
	if visualvalue(USERID) > 1000 then		//Supervisor
		setvalueset(LOGIN,LOGIN_VS1);
	elseif visualvalue(USERID) < 1000 then	//enumerator
		setvalueset(LOGIN,LOGIN_VS2);
	endif;
	
postproc
	if $ = 1 then	//interviewer
		skip to INTERVIEWER_MENU;
	elseif $ = 2 then 	//supervisor
		skip to SUPERVISOR_MENU;
	elseif $ = 9 then
		writeloginstatus(0);
		stop(1);
	endif;

//---------------------------------------------------
PROC INTERVIEWER_MENU
onfocus
	$ = notappl;	//don't show the last selection
	
postproc
	if $ = 1 then		//Visitation Record
		launchVR();
		move to LOGIN;	
	elseif $ = 2 then	//interview households
		skip to CHOOSE_HOUSEHOLD;		
	elseif $ = 3 then	//upload data
		uploadData();
	elseif $ = 9 then	//logout
		writeloginstatus(0);
		stop(1);
	endif;
reenter;		//don't leave the menu


//-----------------------------------------------------------------------------
PROC SUPERVISOR_MENU
onfocus
	$ = notappl;	//don't show the last selection
	
postproc
	if $ = 1 then		//Download/upload Data
		downloadData();
	elseif $ = 2 then	//Open VR
		skip to CHOOSE_VR;		
	elseif$ = 3 then
		skip to CHOOSE_HOUSEHOLD;
	elseif $ = 9 then	//logout
		writeloginstatus(0);
		stop(1);
	endif;
reenter;		//don't leave the menu


//----------------------------------------------------------------------
PROC CHOOSE_HOUSEHOLD

onfocus
	numeric nextEntry = 1;
	forcase VISITATION_RECORD_DICT do
		vscode(nextEntry) = maketext("%v%v%v%v%v",VI_PARISH,VI_ED,VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD);
		vsLabel(nextEntry) = maketext("%v%v%v: %V, %V (%v)",VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD,strip(VI_LAST_NAME),strip(VI_FIRST_NAME),getlabel(VI_STATUS_VS1,VI_STATUS));
		inc(nextEntry);
	endfor;
	
	vsCode(nextEntry) = "";
	
	setvalueset($, vsCode, vsLabel);

postproc
	launchQuestionnaire();
	move to LOGIN;


//-----------------------------------------------------------------------
PROC CHOOSE_VR

onfocus
	numeric nextEntry = 1;
	forcase VISITATION_RECORD_DICT do
		vscode(nextEntry) = maketext("%v%v%v%v%v",VI_PARISH,VI_ED,VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD);
		vsLabel(nextEntry) = maketext("%v%v%v: %V, %V (%v)",VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD,strip(VI_LAST_NAME),strip(VI_FIRST_NAME),getlabel(VI_STATUS_VS1,VI_STATUS));
		inc(nextEntry);
	endfor;
	
	vsCode(nextEntry) = "";
	
	setvalueset($, vsCode, vsLabel);

postproc
	launchSupervisorVR();
	move to LOGIN;


//----------------------------------------------------------------
