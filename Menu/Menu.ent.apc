{Application 'MENU' logic file generated by CSPro}
{
Todo:
 - write login details (ID, ED) to file so that correct login manu is shown
}
PROC GLOBAL
//-----------------Variable Declaration-------------------
file	pffFile;		//creates .pff file
file	loginfile;		//saves login status in a file
numeric PAR;			//temp Parish variable
string	cases;			//case id
string status;			//holds current login status
numeric usertype;		//sets user type

//-------------------Array Declaration--------------------
array string vsCode(99);
array string vsLabel(99);

//------------------Function Declaration------------------
//Launches the visitation record
function launchVR()
	// ALW - Added stop
	execpff("..\Visitation record\Visitation record.pff", stop);
end;

//Launches the Visitation Record for Supervisors
function launchSupervisorVR()

	string pffFilename = pathname(application) + "..\Visitation Record\Visitation Record.pff";
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 7.1");
	filewrite(pffFile,"AppType=Entry");

	filewrite(pffFile,"[DataEntryInit]");
	
	filewrite(pffFile,"StartMode=Add;%s",CHOOSE_VR);
	filewrite(pffFile,"ShowInApplicationListing=Hidden");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","./Visitation Record.ent");
	filewrite(pffFile,"InputData=%s","../Data/VisitationRecord.csdb|CSPRODB");
	filewrite(pffFile,"Paradata=%s","./Visitation Record.cslog");

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"Parameter=%s","onexit = ..\Menu\Menu.pff");

	filewrite(pffFile,"VI_PARISH=%S",CHOOSE_VR[1:2]);		//CHOOSE_HOUSEHOLD[X:Y] where x = starting position, y = length
	filewrite(pffFile,"VI_ED=%S",CHOOSE_VR[3:3]);
	filewrite(pffFile,"VI_BUILDING=%S",CHOOSE_VR[6:3]);
	filewrite(pffFile,"VI_DWELLING_UNIT=%S",CHOOSE_VR[9:3]);
	filewrite(pffFile,"VI_HOUSEHOLD=%S",CHOOSE_VR[12:3]);
	
	close(pffFile);

	execpff(filename(pffFile), stop);
end;


//Launches the Questionnaire and lets you choose a household
function launchQuestionnaire()

	string pffFilename = pathname(application) + "..\Data Entry\Census2020Ver2.pff";
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 7.1");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=Barbados 2020 Census Questionnaire");

	filewrite(pffFile,"[DataEntryInit]");
	
	// ALW - The below line will add the case if it does not exist
	// or enter the case in modify mode if it does
	filewrite(pffFile,"StartMode=Add;%s",CHOOSE_HOUSEHOLD);
	filewrite(pffFile,"ShowInApplicationListing=Hidden");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","./Census2020Ver2.ent");
	filewrite(pffFile,"InputData=%s","../Data/CensusData.csdb|CSPRODB");
	filewrite(pffFile,"Paradata=%s","./Census2020Ver2.cslog");

	filewrite(pffFile,"[ExternalFiles]");
	filewrite(pffFile,"VISITATION_RECORD_DICT=%s","../Data/VisitationRecord.csdb|CSPRODB");

	filewrite(pffFile,"[UserFiles]");
	filewrite(pffFile,"PFFFILE=%s","");

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"Parameter=%s","onexit = ..\Menu\Menu.pff");
	
	filewrite(pffFile,"PARISH=%S",CHOOSE_HOUSEHOLD[1:2]);		//CHOOSE_HOUSEHOLD[X:Y] where x = starting position, y = length
	filewrite(pffFile,"ED=%S",CHOOSE_HOUSEHOLD[3:3]);
	filewrite(pffFile,"BUILDING=%S",CHOOSE_HOUSEHOLD[6:3]);
	filewrite(pffFile,"DWELLING_UNIT=%S",CHOOSE_HOUSEHOLD[9:3]);
	filewrite(pffFile,"HOUSEHOLD=%S",CHOOSE_HOUSEHOLD[12:3]);

	close(pffFile);

	// ALW - Added stop
	execpff(filename(pffFile), stop);
end;

//Function to upload all Census and VR data
function uploadData()
	if syncconnect(Dropbox) then		//connect to dropbox
		syncdata(PUT,Census2020_DICT);	//Upload Census data
		syncdata(PUT,VISITATION_RECORD_DICT);	//Upload VR
		syncfile(PUT,"../Data Entry/Census2020Ver2.cslog",maketext("/CSPro/Logs/CensusLogs/censuslog%d.cslog",USER_PIN));	//upload Questionnaire log file
		syncfile(PUT,"../Visitation record/Visitation Record.cslog",maketext("/CSPro/Logs/VRLogs/vrlog%d.cslog",USER_PIN));	//upload VR log
		syncfile(PUT,"../Menu/Menu.cslog",maketext("/CSPro/Logs/MenuLogs/Menulog%d.cslog",USER_PIN));		//Upload menu log
		syncfile(GET,"/CSPro/Update/Data Entry/Census2020Ver2.pen","../Data Entry/Census2020Ver2.pen");		//Download Data entry update pen file
		syncfile(GET,"/CSPro/Update/Visitation record/Visitation Record.pen","../Visitation record/Visitation Record.pen");		//download visitation record update pen file
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//download menu update pen file
		syncdisconnect();
	endif;
end;

//Function to download Census and VR data for an ED
function synchroniseDAta()
	recode ME_ED => PAR;
		1-181	=>	1;
		182-295	=>	2;
		296-335	=>	3;
		336-397	=>	4;
		398-418	=>	5;
		419-479	=>	6;
		480-508	=>	7;
		509-521	=>	8;
		522-532	=>	9;
		533-559	=>	10;
		560-583	=>	11;
	endrecode;

	cases = maketext("%V%V",ME_ED,PAR);		
	if syncconnect(Dropbox) then	//connect to dropbox
		syncdata(BOTH,Census2020_DICT,cases);		//download Census Data, TODO: may need to tweak the universe  
		syncdata(BOTH,VISITATION_RECORD_DICT,cases);	//Download VR
		syncDisconnect();
	endif;
end;

//Function that writes login status to a file
function writeloginStatus(x);
	string loginFilename = pathname(application)+"loginflag.dat";
	setfile(loginfile,loginFilename,create);

	filewrite(loginfile,"%d%03d%04d%s",x,visualvalue(ME_ED),USER_PIN,strip(UNAME));	//write value of "x" to file. 1=logged in, 0=logged out
	
	close(loginfile);
end;

//Function that reads login status and returns 1 (logged in) or 0 (not logged in)
function readloginstatus();
	string loginfilename = pathname(application)+"loginflag.dat";	//set file path
	setfile(loginfile, loginfilename);		//set file handle
	fileread(loginfile, status);			//read file
	close(loginfile);						//close file
	
	readloginstatus = tonumber(status[1:1]);		//set function to file contents
	ME_ED = tonumber(status[2:3]);
	USER_PIN = tonumber(status[5:4]);
	UNAME = status[9];
end;

PROC MENU_FF

PROC UNAME
preproc
	if readloginstatus() = 1 then		//if already logged in
		skip to ME_ED;					//just login
	elseif readloginstatus() = 0 then	//if not, continue logging in
		
	endif;

//------------------------------------------------------------
PROC USER_PIN
//code to make sure that the valueset label matches Username
postproc
	if getlabel(USER_PIN_VS1,$) = strip(UNAME) then
		writeLoginStatus(1);//success
	else
		errmsg("Username and ID don't match! Please try again");
		move to UNAME;
	endif;


//---------------------------------------------------------------
PROC ME_ED
{onfocus
	if USER_PIN > 1000 then		//Supervisor
		usertype = 2;
	elseif USER_PIN < 1000 then	//enumerator
		usertype = 1;
	endif;
	writeloginstatus(1);
}
PROC LOGIN
onfocus
	if visualvalue(USER_PIN) > 1000 then		//Supervisor
		setvalueset(LOGIN,LOGIN_VS1);
	elseif visualvalue(USER_PIN) < 1000 then	//enumerator
		setvalueset(LOGIN,LOGIN_VS2);
	endif;
	
postproc
	if $ = 1 then	//interviewer
		skip to INTERVIEWER_MENU;
	elseif $ = 2 then 	//supervisor
		skip to SUPERVISOR_MENU;
	elseif $ = 9 then
		writeloginstatus(0);
		stop(1);
	endif;

//---------------------------------------------------
PROC INTERVIEWER_MENU
onfocus
	$ = notappl;	//don't show the last selection
	
postproc
	if $ = 1 then		//Visitation Record
		launchVR();
		move to LOGIN;	
	elseif $ = 2 then	//interview households
		skip to CHOOSE_HOUSEHOLD;		
	elseif $ = 3 then	//upload data
		uploadData();
	elseif $ = 9 then	//logout
		writeloginstatus(0);
		stop(1);
	endif;
reenter;		//don't leave the menu


//-----------------------------------------------------------------------------
PROC SUPERVISOR_MENU
onfocus
	$ = notappl;	//don't show the last selection
	
postproc
	if $ = 1 then		//Download/upload Data
		synchroniseData();
	elseif $ = 2 then	//Open VR
		skip to CHOOSE_VR;		
	elseif$ = 3 then
		skip to CHOOSE_HOUSEHOLD;
	elseif $ = 9 then	//logout
		writeloginstatus(0);
		stop(1);
	endif;
reenter;		//don't leave the menu


//----------------------------------------------------------------------
PROC CHOOSE_HOUSEHOLD

onfocus
	numeric nextEntry = 1;
	forcase VISITATION_RECORD_DICT do
		vscode(nextEntry) = maketext("%v%v%v%v%v",VI_PARISH,VI_ED,VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD);
		vsLabel(nextEntry) = maketext("%v%v%v: %V (%v)",VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD,strip(VI_LAST_NAME),getlabel(VI_STATUS_VS1,VI_STATUS));
		inc(nextEntry);
	endfor;
	
	vsCode(nextEntry) = "";
	
	setvalueset($, vsCode, vsLabel);

postproc
	launchQuestionnaire();
	move to LOGIN;


//-----------------------------------------------------------------------
PROC CHOOSE_VR

onfocus
	numeric nextEntry = 1;
	forcase VISITATION_RECORD_DICT do
		vscode(nextEntry) = maketext("%v%v%v%v%v",VI_PARISH,VI_ED,VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD);
		vsLabel(nextEntry) = maketext("%v%v%v: %V (%v)",VI_BUILDING,VI_DWELLING_UNIT,VI_HOUSEHOLD,strip(VI_LAST_NAME),getlabel(VI_STATUS_VS1,VI_STATUS));
		inc(nextEntry);
	endfor;
	
	vsCode(nextEntry) = "";
	
	setvalueset($, vsCode, vsLabel);

postproc
	launchSupervisorVR();
	move to LOGIN;


//----------------------------------------------------------------
