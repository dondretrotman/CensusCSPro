{Application 'CENSUS2020VER2' logic file generated by CSPro}
{
Census Android CAPI application
Author: Dondré Trotman
Date: 2018/05/24
Version: 0.2

Description:
This application is meant to be installed on an Android device using the CSPRO app available on the Google Play Store.
It is based on the 2020 Barbados Population and Housing Census questionnaire which is still under development.
To run on desktop, it needs the following file extensions, all with the same name:
.ent, .net.apc, .ent.mgf, .ent.qsf, .fmf, .pff
To run on Android, it needs for following file extensions, all with the same name:
.pff, .pen. Copy the two files to the csentry folder on an android device that has CSPro installed

Special instructions: 
Make sure that the order of the individual Listing and the population section are the same.

TODO:
Add more edit checks
Make sure that android experience is good
*Not needd - use toupper() (or tolower()) functions to ensure that all alpha variables are the same case
*Not needed - Add lookup dictionary
Add metadata. i.e. interview start\end time\date, Gps data, interview code and status.
*Done - Add a way to handle vacant houses. Maybe add a question about whether house is vacant or not
*ASK INSTRUCTOR: Check that the dynamic valuesets are being generated correctly
*Done - Ask about getting statistics about enumerator performance. ie how long do they take to answer each question, history of changes, etc.
ask about encrypting CSPro csdb files
Need to develop a VR in CSPro
Build navigation system
Figure how to run code at the end of the questionnaire

Questions for the committee\Cecsus bureau:
What is the best way to handle NOT STATED? Do we continue to questions that might have otherwise been skipped or do we skip to the next topic?
www.github.com/aaronwhitesell
}

PROC GLOBAL
//--------------------------VARIABLE DECLARATION-------------------------------
numeric i, 				//throwaway variable for loops
		tempage, 		//for calculating age
		residents, 		//
		nonreshouse, 	//flag that is set for non-resident house
		diff,			//for calculating date differences
		vsindex = 1,	//valueset index
		;
	
string 	checkboxcodes,	//for creating dynamic checkboxes
		checkboxalpha,	//checkbox alpha code
		caselabel		//stores the label for the current case
		;

//---------------------------ARRAY DECLARATION---------------------------------
array string  vsLabels(26);			//Defines dynamic valueset labels
array numeric vsNumCodes(26);		//defines dynamic numeric valueset codes
array string  vsAlphaCodes(26);		//defines dynamic string valueset codes

//--------------------------FUNCTION DECLARATION-------------------------------
//re-initialises string array to "" in all items
function clearStringArray(array string x())
	do i = 1 while i <= 26
		x(i) = "";
	enddo;
end;

//re-initialises numeric array to 0 in all items
function clearNumArray(array numeric x())
	do i = 1 while i <= 26
		x(i) = 0;
	enddo;
end;

//Function creates a navigation button to move freely throughout the questionnaire as long as the data is valid
//we could add more buttons to navigate by person record or by section. Click nav button to choose a person then click for section
//and another button for the last place you left off
function nav();
	numeric section = accept("Go to section","ID","Individual Listing", "Housing","Emigration","Population");	//Main Navigation options
	if section = 1 then			//if ID
		move to IDS0_FORM advance;		//move to ID stuff
	elseif section = 2 then		//if Individual listing
		move to INDIVIDUAL_FORM advance	;
	elseif section = 3 then		//if Housing
		move to HOUSING_FORM advance;
	elseif section = 4 then		//if Emigration
		move to EMIGRATION_FORM advance;
	elseif section = 5 then		//if Population
		move to POPULATION_FORM advance;
	endif;
end;

//View enumerator manual as a pdf
//DEBUG: WILL NOT OPEN THE FILE!!!
function manual()
	if getos() = 20 then	//if android
		errmsg("view:../Resources/Enumerators_Manual_2010.pdf");
		execsystem("view:../Resources/Enumerators_Manual_2010.pdf");
	elseif getos() = 10 then	//if windows
		errmsg("..\Resources\Enumerators_Manual_2010.pdf"{,pathname(application)});
		execsystem("..\Resources\Enumerators_Manual_2010.pdf");
	endif;
end;
{
//Uses android's built-in GPS to get gps coordinates and sets the latitude and longitude fields
function getgps()
	gps(open);
	if gps(read,60,10) = 1 then	//read up to 60 seconds while trying fo 10m accuracy. if successful
		execsystem(maketext("gps:%f,%f", gps(latitude),gps(longitude)));
		errmsg("Latitude=%f, Longitude=%f, Accuracy=%f",gps(latitude), gps(longitude), gps(accuracy));
		if accept("Save the coordinates?","Yes","No") = 1 then	//if yes
			LATITUDE = gps(latitude);
			LONGITUDE = gps(longitude);
		endif;
	else
		errmsg("gps location failed. Please try again");
		LATITUDE = 0;		//Should probably remove these
		LONGITUDE = 0;		//
	endif;
	gps(close);
//need to add checks at the end of the questionnaire to make sure that gps info was taken
end;
}

PROC CENSUS2020_FF
preproc
	userbar(clear);
	userbar(add button, "Navigation",nav());	//adds a navigation button
	userbar(add button, "View Manual",manual());	//adds button to show enumerator manual
//	userbar(add button, "Get Location",getgps());	//adds button to get gps coordinates
	userbar(show);

PROC PART_A
//show names in label fields when first starting the questionnaire
onfocus
	{do i = 1 while i <= totocc(POPULATION000)		//DEBUG: totocc and count all return 0 if executed before the roster that they are referring to
		setocclabel(POPULATION000(i), strip(FIRST_NAME(i)));
		setocclabel(POPULATION001(i), strip(FIRST_NAME(i)));	//DEBUG: each occurence label is the first one
	enddo;
}	
	if visualvalue(HNOPERSONS) = notappl then
		HNOPERSONS = 0;
	endif;
	
//-----------------------------------------------------------------
PROC PARISH
preproc
	if visualvalue(PARISH) = notappl then		//if Parish is blank
		PARISH = tonumber(sysparm("PARISH"));		//Go to the pff file and get the system parameter named Parish. Change it to number and assign to variable
		setproperty(PARISH,"PROTECTED","Yes");	//and set province to proctected
	endif;
	if visualvalue(ED) = notappl then	
		ED = tonumber(sysparm("ED"));
		setproperty(ED,"PROTECTED","Yes");	
	endif;
	if visualvalue(BUILDING) = notappl then	
		BUILDING = tonumber(sysparm("BUILDING"));
		setproperty(BUILDING,"PROTECTED","Yes");	
	endif;
	if visualvalue(DWELLING_UNIT) = notappl then	
		DWELLING_UNIT = tonumber(sysparm("DWELLING_UNIT"));
		setproperty(DWELLING_UNIT,"PROTECTED","Yes");	
	endif;
	if visualvalue(HOUSEHOLD) = notappl then	
		HOUSEHOLD = tonumber(sysparm("HOUSEHOLD"));
		setproperty(HOUSEHOLD,"PROTECTED","Yes");	
	endif;
PROC ED
//validate ED with parish
	if $ in 1:181 and PARISH <> 1 or		//if ed is not in St. Michael
		$ in 182:295 and PARISH <> 2 or 	//or Christ Church
		$ in 296:335 and PARISH <> 3 or		//or St. George
		$ in 336:397 and PARISH <> 4 or 	//or St. Philip
		$ in 398:418 and PARISH <> 5 or 	//or St. John
		$ in 419:479 and PARISH <> 6 or 	//or St. James
		$ in 480:508 and PARISH <> 7 or 	//or St. Thomas
		$ in 509:521 and PARISH <> 8 or 	//or St. Joseph
		$ in 522:532 and PARISH <> 9 or 	//or St. Andrew
		$ in 533:559 and PARIsh <> 10 or 	//or St. Peter
		$ in 560:583 and PARISH <> 11 then	//or St. Lucy
		errmsg("Enumeration district (%d) does not match the Parish (%s)",$,getlabel(PARISH_VS1,PARISH))
			select("Correct Parish",PARISH,"Correct ED",$);
	endif;
PROC INDIVIDUAL_FORM
preproc
	if visualvalue(START_TIME) = notappl then
		START_TIME = systime();
	endif;
PROC H14A
onfocus
	if visualvalue(HNOPERSONS) > 0 then		//set to occupied if number of persons in the household is more than 0. This is used if changing from an unoccupied house to an occupied one
		$ = 1;
	endif;
	
postproc
	if $ = 2 then	//if unoccupied 
		caselabel = maketext("VACANT-%v-%v-%v-%v",ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
		setcaselabel(CENSUS2020_DICT,caselabel);
		endgroup;	//don't enter any people
	endif;

//Maybe put this field at the top of the individual listing and if unoccupied then skip listing, and only take some household info then end the questionnaire

//----------------------------------------------------------------------
PROC POPULATION000
//SEEK EXAMPLE
{postproc
	if seek(RTH = 1) = 0 then
		errmsg("No spouse in house");
	else
		errmsg("Spouse is person #%d",seek(RTH = 1));
	endif;
	
}
PROC IID
preproc
	$ = curocc();		//automatically enter the ID
	noinput;

postproc
	if curocc() = 1 then	//if at the first person
		RTH = 0;				//set to head of household
	endif;
	
//----------------------------------------------------------------------
PROC LAST_NAME
//Set case labels in case listings to an easier to read format to include name of head
	if curocc() = 1 then
		caselabel = maketext("%s-%v-%v-%v-%v",strip(LAST_NAME),ED,BUILDING,DWELLING_UNIT,HOUSEHOLD);
		setcaselabel(CENSUS2020_DICT,caselabel);
	endif;
PROC FIRST_NAME
POSTPROC
	setocclabel(POPULATION000(CUROCC()), strip(FIRST_NAME));

//------------------------------------------------------------
PROC AGE
preproc
	tempage = datediff(DOB, 20200501, "Y");
	
	if datediff(DOB,20200501) < 0 then		//if DOB 
		errmsg("This person is too young to be enumerated");
	endif;
	
	$ = tempage;	//calculate age

postproc	
	if $ <> tempage then
		errmsg("age (%d) does not agree with DOB (%s), please verify",AGE,edit("9999/99/99",DOB))
		select("Correct the age", AGE, "Correct the Date of birth", DOB);
	endif;

//----------------------------------------------------------------------
PROC RTH
preproc
	if curocc() = 1 and visualvalue($) <> 0 then 	//if this is the first person and is not the head 		
	errmsg("Please verify that this person is the head of household")
			select("Yes, this is the head", continue, "No, is not the head", LAST_NAME);
		$ = 0;	//make first person the head of household
		noinput;
	endif;
	
postproc	
	if $ = 0 and curocc() <> 1 then		//if head and person is not on the first record
		errmsg("Only one head of household is allowed. Current head of household is %s %s",strip(FIRST_NAME),strip(LAST_NAME));
		reenter;
	endif;

//----------------------------------------------------------------------
PROC ADDPER
	if $ = 2 then
		HNOPERSONS = count(FIRST_NAME);
		endgroup;
	endif;

//----------------------------------------------------------------------
PROC HNOPERSONS
//check number of persons in individual listing
	if $ <> totocc(POPULATION000) then	//if the number of persons don't agree with the number of records
		if visualvalue(H14A) = 2 then	//and if unoccupied
			errmsg("Number of persons in household (%d) does not match number in individual listing (%d)",$,totocc(POPULATION000))
			select("Add more people",H14A,"Change number of persons",$);
		else	//if occupied
			errmsg("Number of persons in household (%d) does not match number in individual listing (%d)",$,totocc(POPULATION000))
			select("Add more people",ADDPER(totocc()),"Change number of persons",$);
		endif;
	endif;

//-------------------------------------------------------
PROC H8A
//H8(a) – Do you rent a room in this Building?
	if $ = 2 then
		skip to H8C;
	endif;
	
//----------------------------------------------------------------------
PROC H8B
//H8(b) – How many rented rooms are in this Building?
	if $ = 0 then	//if number of rooms is 0
		H8A = 2;	//assume no rented rooms
	elseif $ > 0 then	//if number of rented rooms is more than 0
		H8A = 1; 	//assume rented rooms
	endif;
	
//----------------------------------------------------------------------
PROC H8C
//H8(c) – What type of dwelling unit is this?
	if H8A = 1 and H14A = 2 then		//if rented rooms exist
		skip to H14B	//goto H14A
	endif;


//----------------------------------------------------------------------
PROC H9
//H9 – Of what materials are the outer walls made?
//should checks on the consistency of Walls, roofs, floors and foundations be done afterward?
PROC H13
	if H14A = 1 then		//if occupied
		skip to H14C	//goto H14C
	endif;
	
//-----------------------------------------------------------------------------
PROC H14C
	if H14A = 2 then	//if unoccupied
		endlevel;		//end interview MAY NEED TO REVIEW FOR CORRECT KEYWORD
	endif;
	
	//if occupied by only non residents (USUAL_RESIDENCE = A)
	//go to questions H15, H16 & H20 - H22

	//count non residents
	if H14A = 1 then		//if occupied
		residents = 0;
		nonreshouse = 0;
		do varying i = 1 until i > totocc(POPULATION000)
			if UR(i) = 1 then		//if resident is found
				inc(residents);	//count residents
			endif;
		enddo;
		if residents = 0 then	//if all persons are not usually resident in this house
			nonreshouse = 1;	//set non-resident house flag
			skip to H15;		//skip to H15
		endif;
	endif;

//----------------------------------------------------------------------
PROC H16C
preproc

postproc
	if nonreshouse = 1 then		//if non-resident household flag is set
		skip to H20;			//go to Main water supply
	endif;
	
//------------------------------------------------------------
PROC H17B
	if not H17A in 3:4 then		//If not rented or leased
		skip to H19A;		//goto H19A
	endif;

//----------------------------------------------------------------------
PROC H18
	skip to H20;	//goto H20

//----------------------------------------------------------------------
PROC H19E
onfocus
	if not H19B in 3,4 then		//if not rented or leased
		skip to H20;			//skip to Water supply
	endif;

//----------------------------------------------------
PROC H21A
//May have to check that person can only have Toilet link to sewer, well or private sewerage if their water supply (H20)is piped into dwelling or at least the yard
PROC H22C
preproc

postproc
	if nonreshouse = 1 then		//if non-resident household flag is set
		endlevel;				//end this questionnaire
	endif;
	
//------------------------------------------------------------
PROC H23AI
//H23(a)i – Which of these appliances\household equipment does your household have?
	if length(strip($)) = 0 then	//if nothing was chosen
		skip to H23B;				//skip the next question
	endif;

//------------------------------------------------------
PROC H23AII
preproc
	ask if H8A = 1 and H8C in 1,3;	//only ask if this is a rented room in a separate house\apartment
	
//create dynamic checkboxes based on previous question
	vsindex = 1;
	checkboxcodes = "ABCDEFGHIJKLMNOPQRSTUVWXZ";
	clearStringArray(vsAlphaCodes);		//initialise array
	
	do i = 1 while i <= 25;		//loop through all checkboxes
		checkboxalpha = checkboxcodes[i:1];	//convert index to alpha code
		if pos(checkboxalpha,H23AI) > 0 then	//if the checkbox was marked in the previous question
			vsalphacodes(vsindex) = checkboxalpha;	//add it to the valueset
			vslabels(vsindex) = getlabel(H23AII_VS1, checkboxalpha);
			inc(vsindex);	//next valueset item
		endif;		
	enddo;
	
	vsalphacodes(vsindex) = "";	//end valueset
	setvalueset($,vsalphacodes,vslabels);	//create valueset based on the above

//----------------------------------------------------------------------------
PROC H25A
	if $ = 2 then		//if no crime victims
		skip to H26		//skip to food security
	endif;
PROC H25B
	if pos("i",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;
	
	if length(strip($)) = 0 then
		errmsg("There are victims of crime in this household but no crimes are selected")
			select("Change crime status",H25A,"Select a crime",$);
	endif;

//-------------------------------------------------------------------------
PROC H25C
onfocus
	//create dynamic checkboxes based on previous question
	vsindex = 1;
	checkboxcodes = "abcdefghi";
	clearStringArray(vsAlphaCodes);		//initialise array
	
	do i = 1 while i <= 9;		//loop through all checkboxes
		checkboxalpha = checkboxcodes[i:1];	//convert index to alpha code
		if pos(checkboxalpha,H25B) > 0 then	//if the checkbox was marked in the previous question
			vsalphacodes(vsindex) = checkboxalpha;	//add it to the valueset
			vslabels(vsindex) = getlabel(H25C_VS1, checkboxalpha);
			inc(vsindex);	//next valueset item
		endif;		
	enddo;
	
	vsalphacodes(vsindex) = "";	//end valueset
	setvalueset($,vsalphacodes,vslabels);	//create valueset based on the above
	
postproc
	if pos("i",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;
	
//----------------------------------------------------------------------------
PROC E8A
	if $ = 2 then		//if no emmigrants
		endgroup;		//end emmigration section
	endif;

//------------------------------------------------------------------
PROC EYEAR
//TODO: validate eyear against date of birth
//How do I find the right record in the individual listing?
{
	if $ < DOB_YEAR then	//if year emigrated is before person was born
		errmsg("Year emigrated (%d) is after year of birth(%s)",$,DOB_YEAR);
		reenter;
	endif;
}
//-----------------------------------------------------------------------
PROC EAGE
//TODO: validate eage against year of departure and age
//Same issue as before

//----------------------------------------------------------------
PROC ECOUNTRY
	
PROC POPULATION001
//show names in label fields when first starting the questionnaire
onfocus
	do i = 1 while i <= totocc(POPULATION001)
		setocclabel(POPULATION001(i), strip(FIRST_NAME(i)));
	enddo;
PROC PID
preproc
	do numeric idx = 1 while idx <= totocc(PID)
		setocclabel(POPULATION001(idx), strip(FIRST_NAME));
	enddo;
	
onfocus
	$ = curocc();


//-----------------------------------------------------------
PROC P8A
onfocus
//create dynamic valueset to show only women in household
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	vslabels(vsindex) = "Not in household";		//create first valueset entry for not in household
	vsnumcodes(vsindex) = 0;
	inc(vsindex);		//next valueset item
	
	do i=1 while i <= totocc()		//go through all persons
		if SEX(i) = 2 and AGE(i) >= 13 and curocc() <> i then	//if female and old enough to be a parent and not the same as the current person
			vslabels(vsindex) = NAME(i);	//include the person's name in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vsnumcodes(vsindex) = notappl;
	setvalueset($, vsnumcodes, vslabels);
			
	
//----------------------------------------------------
PROC P8B
onfocus
//create dynamic valueset to show only women in household
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	vslabels(vsindex) = "Not in household";		//create first valueset entry for not in household
	vsnumcodes(vsindex) = 0;
	inc(vsindex);		//next valueset item
	
	do i=1 while i <= totocc()		//go through all persons
		if SEX(i) = 1 and AGE(i) >= 13 and curocc() <> i then	//if male and old enough to be a parent and not the same as the current person
			vslabels(vsindex) = NAME(i);	//include the person's name in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vsnumcodes(vsindex) = notappl;
	setvalueset($, vsnumcodes, vslabels);
			
	
//----------------------------------------------------
PROC P9
	if AGE < 15 and $ = 1 then		//if not old enough to be married but married
		errmsg("%s is not old enough to be married",strip(FIRST_NAME))
			select("Change answer",$,"Ignore and continue",next);		//either change answer or ignore (useful for catching illegal child brides)
	endif;

//---------------------------------------------------------------------
PROC P12AI
onfocus
	if $ = 2 then		//if no disabilities
		skip to P14;	//skip to non communicable disease
	endif;
	
//---------------------------------------------------------
PROC P12AII
onfocus
	if P12AI = 2 then
		skip to P14;
	endif;

postproc
	if pos("u",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option (%s)",P12AII);
		reenter;
	endif;

//-------------------------------------------------------------------------------
PROC P12C
	if pos("h",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be none and another option");
		reenter;
	endif;
	
	if pos("e",$) > 0 and (pos("k",P12AII) = 0 or pos("l",P12AII) = 0 or pos("m",P12AII) = 0 or pos("n",P12AII) = 0 or pos("r",P12AII) = 0 or pos("s",P12AII) = 0 or pos("t",P12AII) = 0) then
		errmsg("you are using a prosthesis. Are you sure you don't have one of the following disabilities?\nAmputated Limbs\nLimb Deformities");
		//GO BACK TO P12AII OR DESELECT PROSTHESIS
	endif;
	
	if pos("g",$) > 0 and (pos("a",P12AII) = 0 or pos("b",P12AII) = 0) then	//if using Hearing aids but no deafness\significant hearing impairment
		errmsg("You use hearing aids. Are you sure that you are not deaf or have a significant hearing impairment?");	//make sure that person has deafness\significant hearing impairment
		//GO BACK TO P12AII OR DESELECT HEARING AIDS
	endif;

//------------------------------------------------------------------------------------
PROC P14
	if pos("h",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;

//------------------------------------------------------------------------
PROC P15A
	if pos("d",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;
	
	if pos("d",$) > 0 then	//if none
		$ = "d";			//set all to none
		P15B = "d";
		P15C = "d";
		skip to P16A;		//skip drug use
	endif;

//----------------------------------------------------------------
PROC P15B
onfocus
//create dynamic checkboxes based on previous question
	if pos("z",P15A) = 0 then	//if not stated is not selected in the previous question. i.e. show all options if not stated is selected
		vsindex = 1;
		checkboxcodes = "ABC";
		clearStringArray(vsAlphaCodes);		//initialise array
	
		do i = 1 while i <= 3;		//loop through all checkboxes
			checkboxalpha = checkboxcodes[i:1];	//convert index to alpha code
			if pos(checkboxalpha,P15A) > 0 then	//if the checkbox was marked in the previous question
				vsalphacodes(vsindex) = checkboxalpha;	//add it to the valueset
				vslabels(vsindex) = getlabel(P15B_VS1, checkboxalpha);
				inc(vsindex);	//next valueset item
			endif;		
		enddo;
		
		vsAlphaCodes(vsindex) = "d";		//add none to valueset
		vsLabels(vsindex) = "None";
		inc(vsindex);
		vsAlphaCodes(vsindex) = "z";		//add not stated to valuset
		vsLabels(vsindex) = "Not Stated";
		
		vsalphacodes(vsindex) = "";	//end valueset
		setvalueset($,vsalphacodes,vslabels);	//create valueset based on the above
	endif;

postproc
	if pos("d",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;
	
	if pos("d",$) > 0 then	//if none
		$ = "d";			//set all to none
		P15C = "d";
		skip to P16A;		//skip drug use
	endif;

//-----------------------------------------------------------------
PROC P15C
onfocus
//create dynamic checkboxes based on previous question
	if pos("z",P15B) = 0 then	//if not stated is not selected in the previous question. i.e. show all options if not stated is selected
		vsindex = 1;
		checkboxcodes = "ABC";
		clearStringArray(vsAlphaCodes);		//initialise array
	
		do i = 1 while i <= 3;		//loop through all checkboxes
			checkboxalpha = checkboxcodes[i:1];	//convert index to alpha code
			if pos(checkboxalpha,P15B) > 0 then	//if the checkbox was marked in the previous question
				vsalphacodes(vsindex) = checkboxalpha;	//add it to the valueset
				vslabels(vsindex) = getlabel(P15C_VS1, checkboxalpha);
				inc(vsindex);	//next valueset item
			endif;		
		enddo;
	
		vsAlphaCodes(vsindex) = "d";		//add none to valueset
		vsLabels(vsindex) = "None";
		inc(vsindex);
		vsAlphaCodes(vsindex) = "z";		//add not stated to valuset
		vsLabels(vsindex) = "Not Stated";
		
		vsalphacodes(vsindex) = "";	//end valueset
		setvalueset($,vsalphacodes,vslabels);	//create valueset based on the above
	endif;

postproc
	if pos("d",$) > 0 and length(strip($)) > 1 then
		errmsg("cannot be not stated and another option");
		reenter;
	endif;
	
	if pos("d",$) > 0 then	//if none
		$ = "d";			//set all to none
		skip to P16A;		//skip drug use
	endif;

//-----------------------------------------------------------------
PROC P16A
	if $ = 2 then		//if not born in barbados
		skip to P17A;	//skip migration
	endif;

//-----------------------------------------------------------------
PROC P16B
	if AGE < 1 then		//if less than a year old	//ADD CHECKS FOR DOB
		skip to P44;	//skip to last question
	else
		skip to P18;	//otherwise go to Living 1 year ago
	endif;

//-----------------------------------------------------------------------------
PROC P17B
//P17(b) - In which year did you first arrive in Barbados to live?
	diff = datediff(DOB_YEAR,$);
	if diff < 0 then	//if first arrived to live in barbados before birth year
		errmsg("Year first arrived(%d) is after birth year(%d)",$,DOB_YEAR);
		reenter;		//birth year is more likely to be correct at this point
	endif;

//-----------------------------------------------------------
PROC P18
	if AGE < 5 then		//if born after may 1, 2015 (Age 5 years)
		skip to P21A;	//Skip to Education
	endif;

//----------------------------------------------------------------------
PROC P19A
	if $ <> 3 then		//if was not living in another parish
		skip to P20A;	//skip to Ever left barbados
	endif;

//-------------------------------------------------------------
PROC P19B
//P19(b) - If IN ANOTHER PARISH, Which parish?
onfocus
	//create dynamic valueset exclude the current parish
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	do i=1 while i <= 11		//go through all parishes
		if $(i) <> PARISH then	//if it's not the same as current parish
			vslabels(vsindex) = getlabel(P19B_VS1,i);	//include the parish in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	
	vsnumcodes(vsindex) = notappl;
	setvalueset($, vsnumcodes, vslabels);

postproc
	if $ = PARISH then		//if current parish is the same as another parish
		errmsg("Another parish(%s) is the same as current parish(%s)",getlabel(P19B_VS1, P19B), getlabel(PARISH_VS1, PARISH))		//either change another parish or change P19A
			select("Change another parish",$,"Change address at 2015",P19A);
	endif;

//-----------------------------------------------------------------
PROC P20A
	if $ = 2 then		//If never left barbados for 5 years
		skip to P21A;	//skip to Education
	endif;
	
//-----------------------------------------------------------------
PROC P21A
onfocus
	if AGE < 3 then		//if under 3 years old
		skip to P44;	//Go to final question
	endif;
	
postproc	
	if $ = 2 then 				//don't attend school and
		if AGE in 3:16 then		//if between 3 - 16 years old
			skip to P22;		//skip to P22
		elseif AGE > 16 then		//if over 16 years old
			skip to P23;		//skip to P23
		endif;
	endif;
	
	
//--------------------------------------------------------------------------
PROC P21B
//TODO: check that listed ages are correct
{
Age range, shool level
3 - 5		Preprimary
4 - 11		Primary
11 - 16		Secondary
15 - 18		PostSecondary
16+			Tertiary
}
	if (AGE in 3:5 and not $ in 1,6,9)			//if 3-5 years old and not in preprimary
		or (AGE in 4:11 and not $ in 2,6,9)		//or 4-11 years old and not in primary
		or (AGE in 11:16 and not $ in 3,6,9)	//or 11-16 years old and not in secondary
		or (AGE in 15:18 and not $ in 4,6,9)	//or 15-18 and Past post-secondary
		or (AGE > 16 and not $ in 5,6,9) then	//or under 16 years and past Tertiary
		errmsg("Age (%d) does not correspond with current school (%s)", AGE,getlabel(P21B_VS1,P21B));
		reenter;								//try again
	endif;

	if AGE < 15 then		//If under 15 years old
		skip to P44;		//skip to final question
	endif;
	
//-----------------------------------------------------------------
PROC P23
//P23 - what is the highest level of educational institution ever attended by you?
//highest level institution should not be lower than P21B if still attending school
//DEBUG: Should display all schools if P21B was skipped

onfocus
	//create dynamic valueset exclude schools above the current school
	vsindex = 1;		//initialise valueset index
	clearNumArray(vsNumCodes);	//reset the valueset array
	
	do i=1 while i <= 6		//go through all items
		if $(i) <= P21B then	//if it's not the same as current schoo
			vslabels(vsindex) = getlabel(P23_VS1,i);	//include the school in the valueset
			vsnumcodes(vsindex) = i;
			inc(vsindex);					//increment the valueset index
		endif;
	enddo;
	vslabels(vsindex) = "Other";
	vsnumcodes(vsindex) = 7;
	inc(vsindex);
	vslabels(vsindex) = "None";
	vsnumcodes(vsindex) = 8;
	inc(vsindex);
	vslabels(vsindex) = "Not Sated";
	vsnumcodes(vsindex) = 9;
	inc(vsindex);
	
	vsnumcodes(vsindex) = notappl;
	setvalueset($, vsnumcodes, vslabels);

postproc
	if P21A = 1 and $ < P21B then	//if currently attending school and current school is lower than highest school attended
		errmsg("Highest school attended (%s) is lower than current school (%s)",getlabel(P21B_VS1,P21B),getlabel(P23_VS1,P23))
			select("Change current school",P21B,"Change highest school attended",$);
	endif;

//----------------------------------------------------------------------------------------
PROC P25AI
//TODO: create dynamic checkboxes based on P23
onfocus
	//match school levels to exams
	{
	Preprimary => b
	Primary => b
	secondary => c-g,l
	senior => c-k,l
	Post => c-l
	Tertiary => m-s
	}
postproc
	if pos("a",$) > 0 and length($) > 1 then
		errmsg("cannot be 'none' and another option");
		reenter;
	endif;
	
	if pos("b",$) > 0 and length($) > 1 then
		errmsg("cannot be 'not taken any exam' and another option");
		reenter;
	endif;
	
//--------------------------------------------------------------------
PROC P26A
	if pos("i",$) > 0 and length($) > 1 then				//if both "Don't use" and another option
		errmsg("Cannot have Don't use and use internet");	
		reenter;											//input field again
	endif;
	
	if pos("i",$) > 0 then		//if don't use
		skip to P27AI;			//skip to training
	endif;
	
//------------------------------------------------------------
PROC P26B
//TODO: //TODO: create dynamic valueset based on P26A


//-------------------------------------------------------
PROC P27AI
preproc
	if AGE < 15 then		//if under 15 years old
		skip to P44;		//skip to last question
	endif;
	
postproc
	if $ = 2 and SEX = 2 then		//if never trained and female
		skip to P30A;				//skip to fertility
	elseif $ = 2 and SEX = 1 then	//if male
		skip to P34;				//skip to Economic activity
	endif;
	
//---------------------------------------------------------------------
PROC P27C
//P27(c) - If completed training, in what year did you complete training
//TODO: year completed training should be at least 15 years after year of birth
	if $ < DOB_YEAR + 14 then	//if Year completed is less that 15 years after DOB (with 1 year leeway)
		errmsg("Training was completed when %s was less than 15 years old",strip(FIRST_NAME(curocc())));
		reenter;
	endif; 

//-----------------------------------------------------------
PROC P29
	if (SEX = 2 and AGE > 64) or SEX = 1 then	//If female over 64 years or male
		skip to P34;							//skip to economic activity
	endif;
	
//----------------------------------------------------------------------------------
PROC P30A
onfocus		//sanity check to make sure that Females outside of childbearing age and Males don't answer
	if SEX <> 2 then
		skip to P34;
	elseif SEX = 2 and not AGE in 15:64 then
		skip to P34;
	endif;
	 
postproc
	if $ = 2 then	//if never had children
		skip to P33A	//skip to Union status
	endif;
	
//-------------------------------------------------------------------------
PROC P31C
onfocus
	if P30BI = 1 then		//if only one child
		$ = P31A;			//entre the same info for last child
		P31D = P31B;
		if AGE > 49 then	//if over 49
			skip to P33A;	//skip to Union status
		else
			skip to P32;	//else continue
		endif;
	endif;
	
//--------------------------------------------------------------------
PROC P31D
	if AGE > 49 then	//if age is over 49
		skip to P33A;	//skip to union status
	endif;
	
//---------------------------------------------------------------
PROC P32
//TODO:validate against P30Bi and P30CI
PROC P33A
	if $ = 2 then		//if not living with a partner
		skip to P33BII	//skip to P33BII
	endif;
	
//-----------------------------------------------------------
PROC P33BI
onfocus
	if P33A <> 1 or P9 <> 1 then	//if not living with a partner or not married
		skip to next;				//go to next question
	endif;
	
//---------------------------------------------------------------------------------
PROC P33BII
onfocus
	if P33A <> 1 then 	//if NO
		skip to P34		//skip to economic activity
	endif;
	
//-------------------------------------------------------------------
PROC P33C
onfocus
	if P33A = 2 then	//if not with husband or common law partner
		$ = 0;			//score as 0
		skip to P34;	//and skip to economic activity
	endif;
	
//----------------------------------------------------------------------
PROC P34
onfocus
	if AGE < 15 then	//if under 15 years old
		skip to P44;	//skip to final question
	endif;

	
//----------------------------------------------------------
PROC P35
//DEBUG: logic not evaluating properly
	{if not (P34 in 1,8 and not $ in 1:6,8) then		//if worked and worked don't eveluate to false
		errmsg("%s's main activity was %s but worked for %s",FIRST_NAME(curocc()),getlabel(P34_VS1,P34),getlabel(P35_VS1,P35))
			select("Correct Main activity",P34,"Correct work activity",P35);
	elseif not (P34 in 3:7 and $ = 8) then		//if not working and did not work evaluate to false
		errmsg("%s's main activity was %s but %s",FIRST_NAME(curocc()),getlabel(P34_VS1,P34),getlabel(P35_VS1,P35))
			select("Correct Main activity",P34,"Correct work activity",P35);
	endif;
	}
	if $ = 8 then		//if did not work
		skip to P39;	//skip to sources of livelihood
	endif;

//--------------------------------------------------------------------
PROC P39
	if pos("l",$) > 0 and length($) > 1 then		//if Not Stated and other options selected
		errmsg("cannot be not stated and have other selections");
		reenter;		//inpute again
	elseif pos("k",$) > 0 and length($) > 1 then		//if None and other options selected
		errmsg("Cannot be non and have other selections");
		reenter;		//impute again
	endif;
	
	if P35 = 8 then		//If did not work
		skip to P40C;	//skip to Income
	endif;
	
//----------------------------------------------------------
PROC P40A
	if pos("k",P39) > 0 then	//if no sources of livelihood
		skip to P41A;	//skip to agriculture
	endif;
	
//------------------------------------------------------------
PROC P41A
	if $ = 1 then		//if involved in agriculture
		skip to P42;	//skip to agriculture
	endif;
	
//-------------------------------------------------------------------
PROC P41B
//Skip this and other agriculture questions if the last two questions are no
	If P41A = 2 and $ = 2 then		//if the last two questions are "no"
		skip to P44;		//skip agriculture
	endif;
	
//-----------------------------------------------------------------------------
